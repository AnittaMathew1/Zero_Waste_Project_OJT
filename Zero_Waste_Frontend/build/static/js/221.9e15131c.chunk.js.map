{"version":3,"file":"static/js/221.9e15131c.chunk.js","mappings":"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","sources":["routes.js","components/AppBreadcrumb.js","components/AppHeader.js","components/header/AppHeaderDropdown.js","enums/Roles.js","views/pages/About/About.js","views/pages/Corporation/CollectorAllocation/AllocateCollector.js","views/pages/Corporation/CollectorList/CollectorList.js","views/pages/Corporation/CollectorList/UpdateCollectorList.js","views/pages/Corporation/HouseownerList/HouseownerList.js","views/pages/Corporation/SuperAdmin/UpdateWasteDetails/UpdateWasteDetails.js","views/pages/Corporation/SuperAdmin/WasteReport/wastereport.js","views/pages/Corporation/SupervisorList/SupervisorList.js","enums/WasteType.js","views/pages/Corporation/Supervisor/SupervisorDashboard/SupervisorDasboard.js","views/pages/Corporation/Supervisor/WasteCollectionUpdate/WasteCollectionUpdate.js","views/pages/Corporation/UpdateSupervisor/UpdateSupervisor.js","views/pages/Corporation/WasteCollectionStatus/WasteCollectionStatus.js","views/pages/Home/Home.js","views/pages/Home/Type.js","views/pages/Houseowner/BookingHistory/BookingHistory.js","views/pages/Houseowner/BookingStatus/BookingStatus.js","views/widgets/WidgetsBrand.js","views/pages/Houseowner/HouseownerLandingPage/HouseownerLandingPage.js","views/pages/Houseowner/PaymentHistory/PaymentHistory.js","views/pages/Houseowner/Payment/Invoice.js","enums/Status.js","enums/Payments.js","views/pages/Houseowner/Payment/Payment.js","views/pages/Houseowner/SlotBooking/SlotBooking.js","views/pages/UserProfile/UserProfile.js","views/pages/login/Authcontext.js","views/pages/login/Login.js","views/pages/register/Register.js"],"sourcesContent":["import React from 'react'\nimport Home from './views/pages/Home/Home'\nimport Type from './views/pages/Home/Type'\nimport Register from './views/pages/register/Register'\nimport Login from './views/pages/login/Login'\nimport About from './views/pages/About/About'\nimport PaymentHistory from './views/pages/Houseowner/PaymentHistory/PaymentHistory'\nimport CollectorList from './views/pages/Corporation/CollectorList/CollectorList'\nimport UpdateCollectorList from './views/pages/Corporation/CollectorList/UpdateCollectorList'\nimport WasteDataTable from './views/pages/Corporation/SuperAdmin/UpdateWasteDetails/UpdateWasteDetails'\nimport Bill from './views/pages/Houseowner/Payment/Invoice'\nimport SupervisorTable from './views/pages/Corporation/UpdateSupervisor/UpdateSupervisor'\nimport Payment from './views/pages/Houseowner/Payment/Payment'\nimport BookingHistory from './views/pages/Houseowner/BookingHistory/BookingHistory'\nimport BookingStatus from './views/pages/Houseowner/BookingStatus/BookingStatus'\nimport SlotBooking from './views/pages/Houseowner/SlotBooking/SlotBooking'\nimport UserProfile from './views/pages/UserProfile/UserProfile'\nimport SupervisorList from './views/pages/Corporation/SupervisorList/SupervisorList'\nimport HouseownerList from './views/pages/Corporation/HouseownerList/HouseownerList'\nimport WasteCollectionUpdate from './views/pages/Corporation/Supervisor/WasteCollectionUpdate/WasteCollectionUpdate'\nimport WasteReport from './views/pages/Corporation/SuperAdmin/WasteReport/wastereport'\nimport Homeservices from './views/pages/Houseowner/HouseownerLandingPage/HouseownerLandingPage'\nimport SupervisorDashboard from './views/pages/Corporation/Supervisor/SupervisorDashboard/SupervisorDasboard'\nimport AllocateCollector from './views/pages/Corporation/CollectorAllocation/AllocateCollector'\nimport WasteCollectionStatus from './views/pages/Corporation/WasteCollectionStatus/WasteCollectionStatus'\n\nconst routes = [\n  { path: '/', element: Home, name: 'Home' },\n  { path: '/Home', name: 'Home', element: Home },\n  { path: '/Type', name: 'Type', element: Type },\n  { path: '/register', name: 'Register', element: Register },\n  { path: '/login', name: 'Login', element: Login },\n  { path: '/about', name: 'About', element: About },\n  { path: '/invoice', name: 'Payment', element: Bill },\n  { path: '/payment', name: 'Payment', element: Payment },\n  { path: '/houseowner-dashboard', name: 'Dashboard', element: Homeservices },\n  { path: '/bookingstatus', name: 'Booking Status', element: BookingStatus },\n  { path: '/bookinghistory', name: 'Booking History', element: BookingHistory },\n  { path: '/slotbooking', name: 'Book Slot', element: SlotBooking },\n  { path: '/userprofile', name: 'My Profile', element: UserProfile },\n  { path: '/allocatecollector', name: 'Allocate Collection Date', element: AllocateCollector },\n  { path: '/wastereport', name: 'Dashboard', element: WasteReport },\n  { path: '/collector-list', name: 'Collectors List', element: CollectorList },\n  { path: '/update-collector-list', name: 'Update Collectors', element: UpdateCollectorList },\n  { path: '/supervisor-dashboard', name: 'Dashboard', element: SupervisorDashboard },\n  { path: '/houseowner-list', name: 'User List', element: HouseownerList },\n  { path: '/supervisor-list', name: 'Supervisor List', element: SupervisorList },\n  { path: '/paymenthistory', name: 'Payment History', element: PaymentHistory },\n  { path: '/update-wastecharge', name: 'Waste Charge List', element: WasteDataTable },\n  { path: '/update-supervisor', name: 'Supervisor Update', element: SupervisorTable },\n  {\n    path: '/wastecollectionstatus',\n    name: 'Waste Collection Status',\n    element: WasteCollectionStatus,\n  },\n  {\n    path: '/waste-collection-update',\n    name: 'Waste Collection Update',\n    element: WasteCollectionUpdate,\n  },\n]\n\nexport default routes\n","import React from 'react'\nimport { useLocation } from 'react-router-dom'\nimport routes from '../routes'\nimport { CBreadcrumb, CBreadcrumbItem } from '@coreui/react'\n\nconst AppBreadcrumb = () => {\n  const currentLocation = useLocation().pathname\n\n  const getRouteName = (pathname, routes) => {\n    const currentRoute = routes.find((route) => route.path === pathname)\n    return currentRoute ? currentRoute.name : false\n  }\n\n  const getBreadcrumbs = (location) => {\n    const breadcrumbs = []\n    location.split('/').reduce((prev, curr, index, array) => {\n      const currentPathname = `${prev}/${curr}`\n      const routeName = getRouteName(currentPathname, routes)\n      routeName &&\n        breadcrumbs.push({\n          pathname: currentPathname,\n          name: routeName,\n          active: index + 1 === array.length ? true : false,\n        })\n      return currentPathname\n    })\n    return breadcrumbs\n  }\n\n  const breadcrumbs = getBreadcrumbs(currentLocation)\n\n  return (\n    <CBreadcrumb className=\"m-0 ms-2\">\n      <CBreadcrumbItem href=\"/\">Home</CBreadcrumbItem>\n      {breadcrumbs.map((breadcrumb, index) => {\n        return (\n          <CBreadcrumbItem\n            {...(breadcrumb.active ? { active: true } : { href: breadcrumb.pathname })}\n            key={index}\n          >\n            {breadcrumb.name}\n          </CBreadcrumbItem>\n        )\n      })}\n    </CBreadcrumb>\n  )\n}\n\nexport default React.memo(AppBreadcrumb)\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { useNavigate } from 'react-router-dom'\nimport { useContext } from 'react'\nimport { CContainer, CHeader, CHeaderNav, CNavLink, CNavItem, CHeaderDivider } from '@coreui/react'\nimport AuthContext from '../views/pages/login/Authcontext'\nimport Roles from 'src/enums/Roles'\nimport { AppHeaderDropdown } from './header'\nimport AppBreadcrumb from './AppBreadcrumb'\n\nconst AppHeader = (event) => {\n  const navigate = useNavigate()\n  const authCtx = useContext(AuthContext)\n  let role = parseInt(sessionStorage.getItem('role'))\n\n  //function for handling login functionality\n  const handleLogin = () => {\n    navigate('/login')\n  }\n  if (sessionStorage.getItem('jwt')) {\n    authCtx.isLoggedIn = true\n  }\n  if (authCtx.isLoggedIn) {\n    if (role === Roles.HOUSEOWNER) {\n      return (\n        <CHeader position=\"sticky\" className=\"mb-4\">\n          <CHeaderNav className=\"d-md-flex me-auto\">\n            <CNavItem>\n              <CNavLink to=\"/houseowner-dashboard\" component={NavLink} active>\n                Dashboard\n              </CNavLink>\n            </CNavItem>\n            <CNavItem>\n              <CNavLink to=\"/slotbooking\" component={NavLink} active>\n                Book Slot\n              </CNavLink>\n            </CNavItem>\n            <CNavItem>\n              <CNavLink to=\"/bookinghistory\" component={NavLink} active>\n                Booking History\n              </CNavLink>\n            </CNavItem>\n            <CNavItem>\n              <CNavLink to=\"/invoice\" component={NavLink} active>\n                Payment\n              </CNavLink>\n            </CNavItem>\n            <CNavItem>\n              <CNavLink to=\"/paymenthistory\" component={NavLink} active>\n                Payment History\n              </CNavLink>\n            </CNavItem>\n            <div className=\"position-absolute end-0\">\n              <CHeaderNav className=\"ms-2\">\n                <AppHeaderDropdown />\n              </CHeaderNav>\n            </div>\n          </CHeaderNav>\n          <CHeaderDivider />\n          <AppBreadcrumb />\n        </CHeader>\n      )\n    } else if (role === Roles.SUPERADMIN) {\n      return (\n        <CHeader position=\"sticky\" className=\"mb-4\">\n          <CHeaderNav className=\"d-md-flex me-auto\">\n            <CNavItem>\n              <CNavLink to=\"/wastereport\" component={NavLink} active>\n                Dashboard\n              </CNavLink>\n            </CNavItem>\n            <CNavItem>\n              <CNavLink to=\"/houseowner-list\" component={NavLink} active>\n                User List\n              </CNavLink>\n            </CNavItem>\n            <CNavItem>\n              <CNavLink to=\"/update-supervisor\" component={NavLink} active>\n                Update Supervisors\n              </CNavLink>\n            </CNavItem>\n            <CNavItem>\n              <CNavLink to=\"/supervisor-list\" component={NavLink} active>\n                Supervisor List\n              </CNavLink>\n            </CNavItem>\n            <CNavItem>\n              <CNavLink to=\"/update-wastecharge\" component={NavLink} active>\n                Waste Collection Charge\n              </CNavLink>\n            </CNavItem>\n            <CNavItem>\n              <CNavLink to=\"/wastecollectionstatus\" component={NavLink} active>\n                Waste Collection Status\n              </CNavLink>\n            </CNavItem>\n            <div className=\"position-absolute end-0\">\n              <CHeaderNav className=\"ms-2\">\n                <AppHeaderDropdown />\n              </CHeaderNav>\n            </div>\n          </CHeaderNav>\n          <CHeaderDivider />\n          <AppBreadcrumb />\n        </CHeader>\n      )\n    } else if (role === Roles.ADMIN) {\n      return (\n        <CHeader position=\"sticky\" className=\"mb-4\">\n          <CHeaderNav className=\"d-md-flex me-auto\">\n            <CNavItem>\n              <CNavLink to=\"/wastereport\" component={NavLink} active>\n                Dashboard\n              </CNavLink>\n            </CNavItem>\n            <CNavItem>\n              <CNavLink to=\"/allocatecollector\" component={NavLink} active>\n                Allocate Collector\n              </CNavLink>\n            </CNavItem>\n            <CNavItem>\n              <CNavLink to=\"/supervisor-list\" component={NavLink} active>\n                Supervisor List\n              </CNavLink>\n            </CNavItem>\n            <CNavItem>\n              <CNavLink to=\"/update-wastecharge\" component={NavLink} active>\n                Waste Collection Charge\n              </CNavLink>\n            </CNavItem>\n            <CNavItem>\n              <CNavLink to=\"/wastecollectionstatus\" component={NavLink} active>\n                Waste Collection Status\n              </CNavLink>\n            </CNavItem>\n            <div className=\"position-absolute end-0\">\n              <CHeaderNav className=\"ms-2\">\n                <AppHeaderDropdown />\n              </CHeaderNav>\n            </div>\n          </CHeaderNav>\n          <CHeaderDivider />\n          <AppBreadcrumb />\n        </CHeader>\n      )\n    } else if (role === Roles.SUPERVISOR) {\n      return (\n        <CHeader position=\"sticky\" className=\"mb-4\">\n          <CHeaderNav className=\"d-md-flex me-auto\">\n            <CNavItem>\n              <CNavLink to=\"/supervisor-dashboard\" component={NavLink} active>\n                Dashboard\n              </CNavLink>\n            </CNavItem>\n            <CNavItem>\n              <CNavLink to=\"/allocatecollector\" component={NavLink} active>\n                Allocate Collection date\n              </CNavLink>\n            </CNavItem>\n            <CNavItem>\n              <CNavLink to=\"/waste-collection-update\" component={NavLink} active>\n                Waste Collection Update\n              </CNavLink>\n            </CNavItem>\n            <CNavItem>\n              <CNavLink to=\"/collector-list\" component={NavLink} active>\n                Waste Collectors\n              </CNavLink>\n            </CNavItem>\n            <CNavItem>\n              <CNavLink to=\"/update-collector-list\" component={NavLink} active>\n                Update Collectors\n              </CNavLink>\n            </CNavItem>\n            <div className=\"position-absolute end-0\">\n              <CHeaderNav className=\"ms-2\">\n                <AppHeaderDropdown />\n              </CHeaderNav>\n            </div>\n          </CHeaderNav>\n          <CHeaderDivider />\n          <AppBreadcrumb />\n        </CHeader>\n      )\n    }\n  } else {\n    return (\n      <CHeader position=\"sticky\" className=\"mb-4\">\n        <CContainer fluid>\n          <CHeaderNav className=\"d-md-flex me-auto\">\n            <CNavItem>\n              <CNavLink to=\"/home\" component={NavLink} active>\n                Home\n              </CNavLink>\n            </CNavItem>\n            <CNavItem>\n              <CNavLink to=\"/about\" component={NavLink} active>\n                About\n              </CNavLink>\n            </CNavItem>\n            <CNavItem>\n              <CNavLink to=\"/login\" component={NavLink} onClick={handleLogin} active>\n                Login\n              </CNavLink>\n            </CNavItem>\n            <CNavItem>\n              <CNavLink to=\"/register\" component={NavLink} active>\n                Register\n              </CNavLink>\n            </CNavItem>\n          </CHeaderNav>\n        </CContainer>\n        <CHeaderDivider />\n        <AppBreadcrumb />\n      </CHeader>\n    )\n  }\n}\n\nexport default AppHeader\n","import React from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { useContext } from 'react'\nimport {\n  CAvatar,\n  CDropdown,\n  CDropdownDivider,\n  CDropdownHeader,\n  CDropdownItem,\n  CDropdownMenu,\n  CDropdownToggle,\n} from '@coreui/react'\nimport { cilLockLocked, cilUser } from '@coreui/icons'\nimport CIcon from '@coreui/icons-react'\nimport AuthContext from '../../views/pages/login/Authcontext'\n\nconst AppHeaderDropdown = () => {\n  const navigate = useNavigate()\n  const authCtx = useContext(AuthContext)\n\n  //function for handling logout functionality\n  const HandleLogout = () => {\n    sessionStorage.removeItem('jwt')\n    sessionStorage.removeItem('userid')\n    sessionStorage.removeItem('role')\n    sessionStorage.removeItem('employee_id')\n    authCtx.isLoggedIn = false\n    navigate('/login')\n  }\n  //function for navigating to user profile page\n  const HandleUserProfile = () => {\n    navigate('/userprofile')\n  }\n  return (\n    <div className=\"d-flex justify-content-end\">\n      <CDropdown variant=\"nav-item\" className=\"justify-content-end\">\n        <CDropdownToggle placement=\"bottom-end\" className=\"py-0\" caret={false}>\n          <CAvatar color=\"secondary\">User</CAvatar>\n        </CDropdownToggle>\n        <CDropdownMenu className=\"pt-0\" placement=\"bottom-end\">\n          <CDropdownHeader className=\"bg-light fw-semibold py-2\">Account</CDropdownHeader>\n          <CDropdownDivider />\n          <CDropdownItem type=\"button\" onClick={HandleUserProfile}>\n            <CIcon icon={cilUser} className=\"me-2\" />\n            My Profile\n          </CDropdownItem>\n          <CDropdownItem type=\"button\" onClick={HandleLogout}>\n            <CIcon icon={cilLockLocked} className=\"me-2\" />\n            Logout\n          </CDropdownItem>\n        </CDropdownMenu>\n      </CDropdown>\n    </div>\n  )\n}\nexport default AppHeaderDropdown\n","const Roles = {\n  HOUSEOWNER: 1,\n  SUPERADMIN: 2,\n  ADMIN: 3,\n  SUPERVISOR: 4,\n}\n\nexport default Roles\n","import './About.css'\nimport React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport aboutimg from '../../../assets/images/HouseOwner/corporation.jpg'\n\nfunction About() {\n  return (\n    <section>\n      <Container fluid className=\"about-section\">\n        <Row>\n          <Col>\n            <img className=\"homeimage\" src={aboutimg} alt=\"home pic\" />\n          </Col>\n          <Col>\n            <h1 className=\"about-heading\">\n              <b>About Us</b>\n            </h1>\n\n            <p className=\"about\">\n              {\n                \"Waste management is one of the world's most challenging issues, irrespective of\\\n              whether a country is developed or developing. The lack of garbage bins in needed\\\n              areas, as well as the overflow of already existing bins at public locations prior to\\\n              the start of the next cleaning process, is a major problem in waste management. This,\\\n              in turn, causes different threats to that location, such as bad odor and ugliness,\\\n              which may be the root cause of the spread of various diseases. This project is based\\\n              on a smart waste management system to avoid any potentially dangerous scenarios and to\\\n              maintain public cleanliness and health. Through this application the house owners can\\\n              book their slots for waste collection through our application and do the payment\\\n              through the online gateway. The waste collectors will come and collect the waste as\\\n              per the slot booking.\"\n              }\n            </p>\n          </Col>\n        </Row>\n        <Row className=\"rrrdata\">\n          <Col className=\"data\">\n            <p className=\"rrrs\">\n              <b>01 R</b>EDUCE\n            </p>\n            <p>\n              {\n                'The crucial thing in the waste management procedure is to maintain a perfect balance\\\n              in consumption and recycle & reuse. If the consumption is less, the rate of recycling\\\n              or reuse will also be less.'\n              }\n            </p>\n          </Col>\n          <Col className=\"data\">\n            <p className=\"rrrs\">\n              <b>02 R</b>EUSE\n            </p>\n            <p>\n              {\n                'The reuse of old stuff can reduce waste and does not affect the waste hierarchy. If\\\n              you do not have any use of any of these thrown away items, then you can also donate it\\\n              to someone who needs it.'\n              }\n            </p>\n          </Col>\n          <Col className=\"data\">\n            <p className=\"rrrs\">\n              <b>03 R</b>ECYCLE\n            </p>\n            <p>\n              {\n                'Recycling is a process in which the dumping items are transformed into a new item. It\\\n              is vital that you are well aware of the things that can be recycled.'\n              }\n            </p>\n          </Col>\n        </Row>\n      </Container>\n    </section>\n  )\n}\n\nexport default About\n","import React, { useState } from 'react'\nimport { Form } from 'react-bootstrap'\nimport { CContainer, CButton, CRow, CCol, CCard, CCardBody } from '@coreui/react'\nimport '../../Houseowner/BookingHistory/BookingHistory.css'\nimport { postRequest } from '../../../../components/Commonhttp/Commonhttp'\nimport Toast from 'src/components/Toast/Toast'\nimport Title_Status from '../../../../enums/ToastTitle'\n\nconst AllocateCollector = () => {\n  let employeeId = sessionStorage.getItem('employee_id')\n  const [collectionDate, setCollectiondate] = useState()\n  const [toast, setToast] = useState({})\n\n  //function for form submit and API call\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    let allocationData = {\n      supervisor_id: employeeId,\n      collection_date: collectionDate,\n    }\n    postRequest('corporation/collectorallocation', allocationData)\n      .then((data) => {\n        let toastData\n        if (data.message) {\n          toastData = { title: Title_Status['TITLE_SUCCESS'], description: data.message }\n        } else {\n          toastData = { title: Title_Status['TITLE_FAILED'], description: data.errorMessage }\n        }\n        setToast(toastData)\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n  }\n  //Function for setting collection date\n  const handleCollectionDate = (e) => {\n    e.preventDefault()\n    setCollectiondate(e.target.value)\n  }\n\n  return (\n    <div className=\"bg-white min-vh-80 d-flex flex-row align-items-center\">\n      <Toast toastMessage={toast} />\n      <CContainer>\n        <CCard>\n          <CCardBody>\n            <CRow class=\"container-fluid\">\n              <CCol className=\"align-self-start\">\n                <h6>Select Collection Date: </h6>\n                <Form.Group controlId=\"dob\">\n                  <Form.Control\n                    className=\"mt-3 mb-3\"\n                    type=\"date\"\n                    name=\"dob\"\n                    placeholder=\"Collection Date\"\n                    onChange={(e) => handleCollectionDate(e)}\n                  />\n                </Form.Group>\n              </CCol>\n            </CRow>\n          </CCardBody>\n        </CCard>\n        <div className=\"d-flex justify-content-center mt-3\">\n          <CButton className=\"btn btn-primary btn-lg\" onClick={handleSubmit}>\n            Allocate\n          </CButton>\n        </div>\n      </CContainer>\n    </div>\n  )\n}\nexport default AllocateCollector\n","import DataTable from 'react-data-table-component'\nimport React, { useEffect, useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { CButton } from '@coreui/react'\nimport { postRequest } from '../../../../components/Commonhttp/Commonhttp'\nconst CollectorList = () => {\n  const [data, setData] = useState([])\n  const navigate = useNavigate()\n  let collectorListData = { supervisor_id: sessionStorage.getItem('employee_id') }\n  useEffect(() => {\n    postRequest('corporation/collectorlist', collectorListData).then((res) => {\n      setData(res.data)\n    })\n  }, [])\n\n  const handleUpdate = () => {\n    navigate('/update-collector-list')\n  }\n  const columns = [\n    {\n      name: 'Name',\n      selector: (row) => row.firstName + ' ' + row.lastName,\n    },\n    {\n      name: 'Address',\n      selector: (row) => row.address,\n    },\n    {\n      name: 'Phone number',\n      selector: (row) => row.phoneNo,\n    },\n    {\n      name: 'Email',\n      selector: (row) => row.email,\n    },\n  ]\n  return (\n    <div>\n      <div className=\"d-flex justify-content-end\">\n        <CButton type=\"button\" color=\"primary\" className=\"mb-2  px-4\" onClick={handleUpdate}>\n          Update Collector List\n        </CButton>\n      </div>\n      <div>\n        <DataTable\n          class=\"table table-striped\"\n          highlightOnHover\n          data={data}\n          columns={columns}\n          pagination\n        />\n      </div>\n    </div>\n  )\n}\nexport default CollectorList\n","import React, { useState, useEffect } from 'react'\nimport DataTable from 'react-data-table-component'\nimport {\n  CButton,\n  CAlert,\n  CForm,\n  CFormInput,\n  CModal,\n  CModalHeader,\n  CModalTitle,\n  CModalBody,\n  CModalFooter,\n  CFormLabel,\n} from '@coreui/react'\nimport { postRequest } from '../../../../components/Commonhttp/Commonhttp'\nimport Toast from 'src/components/Toast/Toast'\nimport Title_Status from '../../../../enums/ToastTitle'\n\nconst UpdateCollectorList = () => {\n  const [data, setData] = useState()\n  const [firstName, setFirstName] = useState()\n  const [lastName, setLastName] = useState()\n  const [address, setAddress] = useState()\n  const [collector_id, setCollector_id] = useState()\n  const [phoneno, setPhoneno] = useState()\n  const [email, setEmail] = useState()\n  const [visible, setVisible] = useState(false)\n  const [toast, setToast] = useState({})\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [validated, setValidated] = useState(false)\n  let supervisorId = sessionStorage.getItem('employee_id')\n  useEffect(() => {\n    getCollectorData()\n  }, [])\n  const getCollectorData = () => {\n    let collectorListData = { supervisor_id: supervisorId }\n    postRequest('corporation/collectorlist', collectorListData)\n      .then((response) => {\n        setData(response.data)\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n  }\n  const handleAddCollector = () => {\n    setVisible(!visible)\n  }\n  const handleDeleteCollector = (id) => {\n    let deleteSupervisorData = { collector_id: id }\n    postRequest('corporation/delete-collector', deleteSupervisorData)\n      .then((response) => {\n        let toastData\n        if (response.message) {\n          getCollectorData()\n          toastData = { title: Title_Status['TITLE_SUCCESS'], description: response.message }\n        } else {\n          toastData = { title: Title_Status['TITLE_FAILED'], description: response.errorMessage }\n        }\n        setToast(toastData)\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n  }\n  const handleSupervisorNameChange = (id, firstname, lastname, address, phoneno, email) => {\n    setVisible(!visible)\n    setCollector_id(id)\n    setFirstName(firstname)\n    setLastName(lastname)\n    setAddress(address)\n    setPhoneno(phoneno)\n    setEmail(email)\n  }\n  const updateSupervisor = () => {\n    if (collector_id) {\n      let supervisorUpdateData = {\n        collector_id: collector_id,\n        firstName: firstName,\n        lastName: lastName,\n        address: address,\n        phoneno: phoneno,\n        email: email,\n      }\n      postRequest('corporation/update-collector', supervisorUpdateData)\n        .then((response) => {\n          let toastData\n          if (response.message) {\n            getCollectorData()\n            toastData = { title: Title_Status['TITLE_SUCCESS'], description: response.message }\n          } else {\n            toastData = { title: Title_Status['TITLE_FAILED'], description: response.errorMessage }\n          }\n          setToast(toastData)\n          setCollector_id(null)\n          setFirstName(null)\n          setLastName(null)\n          setAddress(null)\n          setPhoneno(null)\n          setEmail(null)\n        })\n        .catch((err) => {\n          console.log(err)\n        })\n    } else {\n      let collectorAddData = {\n        supervisor_id: supervisorId,\n        firstName: firstName,\n        lastName: lastName,\n        address: address,\n        phoneno: phoneno,\n        email: email,\n      }\n      postRequest('corporation/add-collector', collectorAddData)\n        .then((response) => {\n          let toastData\n          if (response.message) {\n            getCollectorData()\n            toastData = { title: Title_Status['TITLE_SUCCESS'], description: response.message }\n          } else {\n            toastData = { title: Title_Status['TITLE_FAILED'], description: response.errorMessage }\n          }\n          setToast(toastData)\n          setFirstName(null)\n          setLastName(null)\n          setAddress(null)\n          setPhoneno(null)\n          setEmail(null)\n        })\n        .catch((err) => {\n          console.log(err)\n        })\n    }\n  }\n  const columns = [\n    {\n      name: 'Name',\n      selector: (row) => row.firstName + ' ' + row.lastName,\n    },\n    {\n      name: 'Address',\n      selector: (row) => row.address,\n    },\n    {\n      name: 'Phone Number',\n      selector: (row) => row.phoneNo,\n    },\n    {\n      name: 'Email',\n      selector: (row) => row.email,\n    },\n    {\n      name: 'Action',\n      cell: (row) => (\n        <button\n          type=\"button\"\n          className=\"btn btn-primary btn-sm\"\n          color=\"primary\"\n          onClick={() =>\n            handleSupervisorNameChange(\n              row.id,\n              row.firstname,\n              row.lastname,\n              row.address,\n              row.phoneno,\n              row.email,\n            )\n          }\n        >\n          Update\n        </button>\n      ),\n      button: true,\n    },\n    {\n      name: '',\n      cell: (row) => (\n        <button\n          type=\"button\"\n          className=\"btn btn-primary btn-sm\"\n          color=\"primary\"\n          onClick={() => handleDeleteCollector(row.id)}\n        >\n          Delete\n        </button>\n      ),\n      button: true,\n    },\n  ]\n  return (\n    <div>\n      <center>\n        <div className=\"w-100\">\n          <Toast toastMessage={toast} />\n          <div className=\"d-flex justify-content-end\">\n            <CButton\n              type=\"button\"\n              color=\"primary\"\n              className=\"align-self-end  px-4\"\n              onClick={handleAddCollector}\n            >\n              Add Collector\n            </CButton>\n          </div>\n          <DataTable\n            className=\"table table-striped\"\n            columns={columns}\n            data={data}\n            pagination\n            highlightOnHover\n            pointerOnHover\n          />\n        </div>\n      </center>\n      <CModal visible={visible} onClose={() => setVisible(false)}>\n        <CModalHeader onClose={() => setVisible(false)}>\n          <CModalTitle>Update Collector</CModalTitle>\n        </CModalHeader>\n        <CModalBody>\n          <CForm noValidate validated={validated}>\n            {errorMessage && (\n              <CAlert color=\"danger\" className=\"mt-3\">\n                {errorMessage}\n              </CAlert>\n            )}\n            <CFormLabel>Firstname</CFormLabel>\n            <CFormInput\n              type=\"first_name\"\n              name=\"first_name\"\n              className=\"mb-2\"\n              feedbackInvalid=\"Please enter first_name.\"\n              required\n              value={firstName}\n              onChange={(event) => {\n                setFirstName(event.target.value)\n                setErrorMessage(null)\n              }}\n            />\n            <CFormLabel>Last Name</CFormLabel>\n            <CFormInput\n              type=\"last_name\"\n              name=\"last_name\"\n              className=\"mb-2\"\n              feedbackInvalid=\"Please give new password.\"\n              required\n              value={lastName}\n              onChange={(event) => {\n                setLastName(event.target.value)\n                setErrorMessage(null)\n              }}\n            />\n            <CFormLabel>Address</CFormLabel>\n            <CFormInput\n              type=\"address\"\n              name=\"address\"\n              className=\"mb-2\"\n              feedbackInvalid=\"Please give new password.\"\n              required\n              value={address}\n              onChange={(event) => {\n                setAddress(event.target.value)\n                setErrorMessage(null)\n              }}\n            />\n            <CFormLabel>Phone Number</CFormLabel>\n            <CFormInput\n              type=\"phoneno\"\n              name=\"phoneno\"\n              className=\"mb-2\"\n              feedbackInvalid=\"Please enter Phone number.\"\n              required\n              value={phoneno}\n              onChange={(event) => {\n                setPhoneno(event.target.value)\n                setErrorMessage(null)\n              }}\n            />\n            <CFormLabel>Email</CFormLabel>\n            <CFormInput\n              type=\"email\"\n              name=\"email\"\n              className=\"mb-2\"\n              feedbackInvalid=\"Please enter Email.\"\n              required\n              value={email}\n              onChange={(event) => {\n                setEmail(event.target.value)\n                setErrorMessage(null)\n              }}\n            />\n          </CForm>\n        </CModalBody>\n        <CModalFooter>\n          <CButton color=\"primary\" onClick={() => updateSupervisor()}>\n            Save\n          </CButton>\n        </CModalFooter>\n      </CModal>\n    </div>\n  )\n}\nexport default UpdateCollectorList\n","import DataTable from 'react-data-table-component'\nimport React, { useEffect, useState } from 'react'\nimport { getRequest } from '../../../../components/Commonhttp/Commonhttp'\n\nconst HouseownerList = () => {\n  const [data, setData] = useState([])\n  useEffect(() => {\n    getRequest('corporation/houseowners-list').then((res) => {\n      setData(res.data)\n    })\n  }, [])\n  const columns = [\n    {\n      name: 'Name',\n      selector: (row) => row.fullName,\n    },\n    {\n      name: 'Address',\n      selector: (row) => row.address,\n    },\n    {\n      name: 'Phone number',\n      selector: (row) => row.phoneNo,\n    },\n    {\n      name: 'Email',\n      selector: (row) => row.email,\n    },\n    {\n      name: 'Ward',\n      selector: (row) => row.wardName,\n    },\n  ]\n  return (\n    <div>\n      <div>\n        <DataTable\n          class=\"table table-striped\"\n          highlightOnHover\n          data={data}\n          columns={columns}\n          pagination\n        />\n      </div>\n    </div>\n  )\n}\nexport default HouseownerList\n","import React, { useState, useEffect } from 'react'\nimport DataTable from 'react-data-table-component'\nimport {\n  CButton,\n  CAlert,\n  CForm,\n  CFormInput,\n  CModal,\n  CModalHeader,\n  CModalTitle,\n  CModalBody,\n  CModalFooter,\n  CFormLabel,\n} from '@coreui/react'\nimport { postRequest, getRequest } from '../../../../../components/Commonhttp/Commonhttp'\nimport Toast from 'src/components/Toast/Toast'\nimport Title_Status from '../../../../../enums/ToastTitle'\n\nconst WasteDataTable = () => {\n  const [tableData, setTableData] = useState()\n  const [wasteId, setWasteId] = useState()\n  const [charge, setCharge] = useState()\n  const [visible, setVisible] = useState(false)\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [toast, setToast] = useState({})\n  const [validated, setValidated] = useState(false)\n  const [errorAlert, setErrorAlert] = useState('')\n\n  useEffect(() => {\n    getWasteData()\n  }, [])\n\n  //Function for getting waste list\n  const getWasteData = () => {\n    getRequest('corporation/wastedata')\n      .then((response) => {\n        setTableData(response.data)\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n  }\n\n  //Function for setting new charge\n  const handleNewCharge = (event) => {\n    setCharge(event.target.value)\n    setErrorMessage(null)\n  }\n\n  //Function for setting waste charge and waste id\n  const handleChargeUpdate = (id, charge) => {\n    setVisible(!visible)\n    setWasteId(id)\n    setCharge(charge)\n  }\n\n  //Function for API call for updating waste charge\n  const updateCharge = () => {\n    let wasteDetailsUpdateData = {\n      waste_id: wasteId,\n      waste_rate: charge,\n    }\n    setValidated(true)\n    if (charge) {\n      postRequest('corporation/wastedetails-update', wasteDetailsUpdateData)\n        .then((response) => {\n          setCharge(null)\n          setVisible(false)\n          let toastData\n          if (response.message) {\n            getWasteData()\n            toastData = { title: Title_Status['TITLE_SUCCESS'], description: response.message }\n          } else {\n            toastData = { title: Title_Status['TITLE_FAILED'], description: response.errorMessage }\n          }\n          setToast(toastData)\n        })\n        .catch((err) => {\n          console.log(err)\n        })\n    } else {\n      setErrorAlert('Something went wrong')\n    }\n  }\n  const columns = [\n    {\n      name: 'Waste Type',\n      selector: (row) => row.wasteType,\n    },\n    {\n      name: 'Collection Charge',\n      selector: (row) => row.charge,\n    },\n    {\n      name: 'Action',\n      cell: (row) => (\n        <button\n          type=\"button\"\n          className=\"btn btn-primary btn-sm\"\n          color=\"primary\"\n          onClick={() => handleChargeUpdate(row.id, row.charge)}\n        >\n          Update\n        </button>\n      ),\n      button: true,\n    },\n  ]\n\n  return (\n    <div>\n      <center>\n        <div className=\"w-85\">\n          <Toast toastMessage={toast} />\n          <DataTable\n            className=\"table table-striped\"\n            columns={columns}\n            data={tableData}\n            pagination\n            highlightOnHover\n            pointerOnHover\n          />\n          {errorAlert && <div className=\"errormessage\">{errorAlert}</div>}\n        </div>\n      </center>\n      <CModal visible={visible} onClose={() => setVisible(false)}>\n        <CModalHeader onClose={() => setVisible(false)}>\n          <CModalTitle>Update Supervisor</CModalTitle>\n        </CModalHeader>\n        <CModalBody>\n          <CForm noValidate validated={validated}>\n            {errorMessage && (\n              <CAlert color=\"danger\" className=\"mt-3\">\n                {errorMessage}\n              </CAlert>\n            )}\n            <CFormLabel>Charge</CFormLabel>\n            <CFormInput\n              type=\"rupees\"\n              name=\"charge\"\n              className=\"mb-2\"\n              feedbackInvalid=\"Please enter charge.\"\n              required\n              value={charge}\n              onChange={(event) => {\n                handleNewCharge(event)\n              }}\n            />\n          </CForm>\n        </CModalBody>\n        <CModalFooter>\n          <CButton color=\"primary\" onClick={() => updateCharge()}>\n            Save\n          </CButton>\n        </CModalFooter>\n      </CModal>\n    </div>\n  )\n}\nexport default WasteDataTable\n","import { CChart } from '@coreui/react-chartjs'\nimport { useState, useEffect } from 'react'\nimport CIcon from '@coreui/icons-react'\nimport { CWidgetStatsD, CRow, CCol } from '@coreui/react'\nimport { cilCalendarCheck, cilMoney, cilCalendar } from '@coreui/icons'\nimport { CInputGroup, CFormSelect, CCard, CCardBody } from '@coreui/react'\nimport PropTypes from 'prop-types'\nimport './WasteReport.css'\nimport { postRequest, getRequest } from '../../../../../components/Commonhttp/Commonhttp'\n\nconst WasteReport = ({ withCharts }) => {\n  const [wasteData, setWasteData] = useState()\n  const [graphLabel, setGraphLabel] = useState()\n  const [graphValue, setGraphValue] = useState()\n  const [highestCopllectedWard, setHighestCopllectedWard] = useState(0)\n  const [lowestCopllectedWard, setLowestCopllectedWard] = useState(0)\n  const [totalSlotBooked, setTotalSlotBooked] = useState(0)\n  const [wasteid, setWasteid] = useState('1')\n  useEffect(() => {\n    getWasteData()\n    getData()\n  }, [])\n\n  //function for getting dashboard data for corporation page\n  const getData = () => {\n    getRequest('corporation/corporationdashboard')\n      .then((data) => {\n        setHighestCopllectedWard(data.data[0].highestCollectedWard[0])\n        setLowestCopllectedWard(data.data[0].lowestCollectedWard[0])\n        setTotalSlotBooked(data.data[0].totalSlotBooked)\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n  }\n\n  //function for getting waste type list\n  const getWasteData = () => {\n    fetchGraphdata()\n    getRequest('corporation/wastedata')\n      .then((data) => {\n        setWasteData(data.data)\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n  }\n\n  //function for setting waste id\n  const handleWaste = (e) => {\n    e.preventDefault()\n    setWasteid(e.target.value)\n    fetchGraphdata()\n  }\n\n  //function for fetching wardwise- waste report data\n  const fetchGraphdata = () => {\n    let wasteReportData = { wasteid: wasteid }\n    postRequest('corporation/wastereport', wasteReportData)\n      .then((data) => {\n        getGraphData(data.data[0])\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n  }\n\n  //function for setting waste report graph\n  const getGraphData = (data) => {\n    let labels = []\n    let values = []\n    Object.keys(data).forEach((key) => {\n      labels.push(key)\n      values.push(data[key])\n    })\n    setGraphLabel(labels)\n    setGraphValue(values)\n  }\n  const chartOptions = {\n    elements: {\n      line: {\n        tension: 0.4,\n      },\n      point: {\n        radius: 0,\n        hitRadius: 10,\n        hoverRadius: 4,\n        hoverBorderWidth: 3,\n      },\n    },\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        display: false,\n      },\n    },\n    scales: {\n      x: {\n        display: false,\n      },\n      y: {\n        display: false,\n      },\n    },\n  }\n\n  return (\n    <div>\n      <CRow>\n        <CCol>\n          <CWidgetStatsD\n            className=\"mb-4\"\n            icon={<CIcon icon={cilCalendarCheck} height={52} className=\"my-4 text-white\" />}\n            values={[{ title: 'Highest Slot Booked Ward', value: highestCopllectedWard }]}\n            style={{\n              '--cui-card-cap-bg': '#3b5998',\n            }}\n          />\n        </CCol>\n\n        <CCol>\n          <CWidgetStatsD\n            className=\"mb-4\"\n            icon={<CIcon icon={cilMoney} height={52} className=\"my-4 text-white\" />}\n            values={[{ title: 'Lowest Slot Booked Ward', value: lowestCopllectedWard }]}\n            style={{\n              '--cui-card-cap-bg': '#00aced',\n            }}\n          />\n        </CCol>\n\n        <CCol>\n          <CWidgetStatsD\n            className=\"mb-4\"\n            color=\"warning\"\n            icon={<CIcon icon={cilCalendar} height={52} className=\"my-4 text-white\" />}\n            values={[{ title: 'Total Slots Booked', value: totalSlotBooked }]}\n          />\n        </CCol>\n      </CRow>\n      <CCard>\n        <CCardBody>\n          <CInputGroup className=\"mb-3\">\n            <CFormSelect\n              placeholder=\"Select Waste name\"\n              aria-label=\"Default select example\"\n              className=\"mb-1\"\n              feedbackInvalid=\"Please select Waste name.\"\n              id=\"validationCustom01\"\n              required\n              onChange={(e) => handleWaste(e)}\n            >\n              {wasteData?.map((waste) => {\n                return (\n                  <option key={waste.id} value={waste.id}>\n                    {waste.waste_type}\n                  </option>\n                )\n              })}\n            </CFormSelect>\n          </CInputGroup>\n\n          <CChart\n            type=\"bar\"\n            data={{\n              labels: graphLabel,\n              datasets: [\n                {\n                  label: 'Waste quantity',\n                  backgroundColor: '#f87979',\n                  data: graphValue,\n                },\n              ],\n            }}\n          />\n        </CCardBody>\n      </CCard>\n    </div>\n  )\n}\nWasteReport.propTypes = {\n  withCharts: PropTypes.bool,\n}\nconst textstyle = {\n  color: 'black',\n  textAlign: 'center',\n  textdecoration: 'none',\n}\n\nexport default WasteReport\n","import DataTable from 'react-data-table-component'\nimport React, { useEffect, useState } from 'react'\nimport { CButton } from '@coreui/react'\nimport { useNavigate } from 'react-router-dom'\nimport { getRequest } from '../../../../components/Commonhttp/Commonhttp'\n\nconst SupervisorList = () => {\n  const [supervisorData, setSupervisorData] = useState([])\n  const navigate = useNavigate()\n  useEffect(() => {\n    getSupervsiorData()\n  }, [])\n\n  //Function for getting supervisor data\n  const getSupervsiorData = () => {\n    getRequest('corporation/wardwise-supervisorlist').then((res) => {\n      setSupervisorData(res.data)\n    })\n  }\n\n  //Function for nagivate to update supervisor page\n  const handleUpdate = () => {\n    navigate('/update-supervisor')\n  }\n  const columns = [\n    {\n      name: 'Name',\n      selector: (row) => row.firstName + ' ' + row.lastName,\n    },\n    {\n      name: 'Phone Number',\n      selector: (row) => row.phoneNo,\n    },\n    {\n      name: 'Ward',\n      selector: (row) => row.wardName,\n    },\n  ]\n  return (\n    <div>\n      <div className=\"d-flex justify-content-end\">\n        <CButton type=\"button\" color=\"primary\" className=\"mt-n5 px-4 mb-2\" onClick={handleUpdate}>\n          Update\n        </CButton>\n      </div>\n      <div>\n        <DataTable\n          class=\"table table-striped\"\n          highlightOnHover\n          data={supervisorData}\n          columns={columns}\n          pagination\n        />\n      </div>\n    </div>\n  )\n}\nexport default SupervisorList\n","const WasteType = {\n  PLASTIC: 1,\n  FOOD: 2,\n  EWASTE: 3,\n  METAL: 4,\n  PAPER: 5,\n}\n\nexport default WasteType\n","import { useState, useEffect } from 'react'\nimport CIcon from '@coreui/icons-react'\nimport DataTable from 'react-data-table-component'\nimport { CWidgetStatsD, CRow, CCol, CBadge } from '@coreui/react'\nimport { cilCalendarCheck, cilMoney, cilCalendar, cilTrash } from '@coreui/icons'\nimport PropTypes from 'prop-types'\nimport WasteType from '../../../../../enums/WasteType'\nimport { postRequest } from '../../../../../components/Commonhttp/Commonhttp'\n\nconst SupervisorDashboard = ({ withCharts }) => {\n  const [plasticCollected, setPlasticCollected] = useState(0)\n  const [foodCollected, setFoodCollected] = useState(0)\n  const [ewasteCollected, setEwasteCollected] = useState(0)\n  const [metalCollected, setMetalCollected] = useState(0)\n  const [statusData, setStatusData] = useState([])\n  useEffect(() => {\n    getData()\n    getStatusData()\n  }, [])\n\n  // function for getting data for supervisor dashboard\n  const getData = () => {\n    let supervisorDashboardData = { supervisor_id: sessionStorage.getItem('employee_id') }\n    postRequest('corporation/supervisordashboard', supervisorDashboardData)\n      .then((data) => {\n        setPlasticCollected(data.data.plasticCollected)\n        setFoodCollected(data.data.foodCollected)\n        setEwasteCollected(data.data.ewasteCollected)\n        setMetalCollected(data.data.metalCollected)\n        setStatusData(data.data.collection_status)\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n  }\n  const getStatusData = () => {\n    let supervisorId = sessionStorage.getItem('employee_id')\n    let colectionStatusData = { supervisor_id: supervisorId }\n    postRequest('corporation/supervisordashboard-status', colectionStatusData).then((res) => {\n      setStatusData(res.data)\n    })\n  }\n  const columns = [\n    {\n      name: 'Houseowner Name',\n      selector: (row) => row.houseownerName,\n    },\n    {\n      name: 'Collection Date',\n      selector: (row) => row.collectionDate,\n    },\n    {\n      name: 'Waste Type',\n      selector: (row) => {\n        if (row.wasteType === WasteType.PLASTIC) {\n          return 'Plastic Plastic'\n        } else if (row.wasteType === WasteType.FOOD) {\n          return 'Food Waste'\n        } else if (row.wasteType === WasteType.EWASTE) {\n          return 'E-Waste'\n        } else if (row.wasteType === WasteType.METAL) {\n          return 'Metal'\n        } else {\n          return 'Paper'\n        }\n      },\n    },\n    {\n      name: 'Status',\n      selector: (row) => (\n        <CBadge\n          color={\n            row.status === 'Pending'\n              ? 'warning'\n              : row.status === 'Collector Allocated'\n              ? 'warning'\n              : row.status === 'Cancelled'\n              ? 'danger'\n              : row.status === 'Collected'\n              ? 'success'\n              : 'primary'\n          }\n        >\n          {row.status}\n        </CBadge>\n      ),\n    },\n  ]\n  return (\n    <div className=\"h-100\">\n      <CRow>\n        <CCol>\n          <CWidgetStatsD\n            className=\"mb-4\"\n            icon={<CIcon icon={cilCalendarCheck} height={52} className=\"my-4 text-white\" />}\n            values={[{ title: 'Plastic Waste Collected', value: plasticCollected }]}\n            style={{\n              '--cui-card-cap-bg': '#3b5998',\n            }}\n          />\n        </CCol>\n\n        <CCol>\n          <CWidgetStatsD\n            className=\"mb-4\"\n            icon={<CIcon icon={cilMoney} height={52} className=\"my-4 text-white\" />}\n            values={[{ title: 'Food Waste Collected', value: foodCollected }]}\n            style={{\n              '--cui-card-cap-bg': '#00aced',\n            }}\n          />\n        </CCol>\n\n        <CCol>\n          <CWidgetStatsD\n            className=\"mb-4\"\n            color=\"warning\"\n            icon={<CIcon icon={cilCalendar} height={52} className=\"my-4 text-white\" />}\n            values={[{ title: 'E-Waste Collected', value: ewasteCollected }]}\n          />\n        </CCol>\n        <CCol>\n          <CWidgetStatsD\n            className=\"mb-4\"\n            color=\"success\"\n            icon={<CIcon icon={cilTrash} height={52} className=\"my-4 text-white\" />}\n            values={[{ title: 'Metal Waste Collected', value: metalCollected }]}\n          />\n        </CCol>\n      </CRow>\n      <CRow>\n        <DataTable\n          class=\"table table-striped\"\n          highlightOnHover\n          data={statusData}\n          columns={columns}\n          pagination\n        />\n      </CRow>\n    </div>\n  )\n}\nSupervisorDashboard.propTypes = {\n  withCharts: PropTypes.bool,\n}\nconst textstyle = {\n  color: 'black',\n  textAlign: 'center',\n  textdecoration: 'none',\n}\n\nexport default SupervisorDashboard\n","import React from 'react'\nimport { useState } from 'react'\nimport { Form } from 'react-bootstrap'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardGroup,\n  CCol,\n  CContainer,\n  CForm,\n  CInputGroup,\n  CInputGroupText,\n  CRow,\n  CFormSelect,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilTrash } from '@coreui/icons'\nimport { postRequest } from '../../../../../components/Commonhttp/Commonhttp'\nimport './WasteCollectionUpdate.css'\nimport Toast from 'src/components/Toast/Toast'\nimport Title_Status from '../../../../../enums/ToastTitle'\n\nconst WasteCollectionUpdate = () => {\n  const [status, setStatus] = useState('')\n  const [validated, setValidated] = useState(false)\n  const [toast, setToast] = useState()\n  const [collectionDate, setCollectiondate] = useState()\n  let employeeId = parseInt(sessionStorage.getItem('employee_id'))\n\n  //function for setting collection date\n  const handleCollectionDate = (e) => {\n    e.preventDefault()\n    setCollectiondate(e.target.value)\n  }\n\n  //function for setting collection status\n  const handleStatus = (e) => {\n    e.preventDefault()\n    setStatus(e.target.value)\n  }\n  //function for form submit and API call\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    const form = event.currentTarget\n    if (form.checkValidity() === false) {\n      setValidated(false)\n      event.preventDefault()\n      event.stopPropagation()\n    }\n    setValidated(true)\n    if (collectionDate && status) {\n      const collectionUpdate = {\n        employee_id: employeeId,\n        collection_date: collectionDate,\n        status: status,\n      }\n      postRequest('corporation/collectionstatusupdate', collectionUpdate)\n        .then((resJson) => {\n          let toastData\n          if (resJson.message) {\n            toastData = { title: Title_Status['TITLE_SUCCESS'], description: resJson.message }\n          } else {\n            toastData = { title: Title_Status['TITLE_FAILED'], description: resJson.errorMessage }\n          }\n          setToast(toastData)\n        })\n        .catch((err) => {\n          console.log(err)\n        })\n    }\n  }\n\n  return (\n    <div className=\"bg-white min-vh-80 d-flex flex-row align-items-center\">\n      <Toast toastMessage={toast} />\n      <CContainer>\n        <CRow className=\"justify-content-center\">\n          <CCol md={8}>\n            <CCardGroup>\n              <CCard className=\"p-4\">\n                <CCardBody>\n                  <CForm\n                    md={8}\n                    className=\"row g-3 needs-validation\"\n                    noValidate\n                    validated={validated}\n                    onSubmit={handleSubmit}\n                  >\n                    <h3>Update Collection details</h3>\n                    <CInputGroup className=\"mb-3\">\n                      <CInputGroupText>\n                        <CIcon icon={cilTrash} />\n                      </CInputGroupText>\n                      <CFormSelect\n                        type=\"select\"\n                        placeholder=\"Select Waste Type\"\n                        aria-label=\"Default select example\"\n                        className=\"mb-.5\"\n                        feedbackInvalid=\"Please select Waste type.\"\n                        id=\"validationCustom01\"\n                        required\n                        onChange={(e) => handleStatus(e)}\n                      >\n                        <option>Select Status</option>\n                        <option value=\"Collected\">Collected</option>\n                        <option value=\"Pending\">Pending</option>\n                      </CFormSelect>\n                    </CInputGroup>\n                    <CInputGroup className=\"mb-3\">\n                      <CInputGroupText>\n                        <CIcon icon={cilTrash} />\n                      </CInputGroupText>\n                      <Form.Group controlId=\"dob\" className=\"formgroup\">\n                        <Form.Control\n                          className=\"mb-.5 \"\n                          type=\"date\"\n                          name=\"date\"\n                          placeholder=\"Select date\"\n                          onChange={(e) => handleCollectionDate(e)}\n                          style={{ borderRadius: '0', width: '300%' }}\n                        />\n                      </Form.Group>\n                    </CInputGroup>\n                    <CRow>\n                      <CCol xs={6}>\n                        <CButton type=\"submit\" color=\"primary\" className=\"px-4\">\n                          Submit\n                        </CButton>\n                      </CCol>\n                    </CRow>\n                  </CForm>\n                </CCardBody>\n              </CCard>\n            </CCardGroup>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </div>\n  )\n}\n\nexport default WasteCollectionUpdate\n","import React, { useState, useEffect } from 'react'\nimport DataTable from 'react-data-table-component'\nimport {\n  CButton,\n  CAlert,\n  CForm,\n  CFormInput,\n  CModal,\n  CModalHeader,\n  CModalTitle,\n  CModalBody,\n  CModalFooter,\n  CFormLabel,\n} from '@coreui/react'\nimport { postRequest, getRequest } from '../../../../components/Commonhttp/Commonhttp'\nimport Toast from 'src/components/Toast/Toast'\nimport Title_Status from '../../../../enums/ToastTitle'\nimport './UpdateSupervisor.css'\n\nconst SupervisorTable = () => {\n  const [tableData, setTableData] = useState()\n  const [firstName, setFirstName] = useState()\n  const [lastName, setLastName] = useState()\n  const [phoneno, setPhoneno] = useState()\n  const [wardNo, setWardNo] = useState()\n  const [supervisorEmail, setSupervisorEmail] = useState()\n  const [wardName, setWardName] = useState()\n  const [visible, setVisible] = useState(false)\n  const [formVisible, setFormVisible] = useState(false)\n  const [toast, setToast] = useState({})\n  const [errorMessage, setErrorMessage] = useState('')\n  const [validated, setValidated] = useState(false)\n  const [errorAlert, setErrorAlert] = useState('')\n\n  useEffect(() => {\n    getSupervisorData()\n  }, [])\n\n  //function for setting firstname\n  const handleFirstName = (event) => {\n    event.preventDefault()\n    setFirstName(event.target.value)\n    setErrorMessage(null)\n  }\n\n  //function for setting lastname\n  const handleLastName = (event) => {\n    event.preventDefault()\n    setLastName(event.target.value)\n    setErrorMessage(null)\n  }\n\n  //function for setting phone number\n  const handlePhoneNo = (event) => {\n    event.preventDefault()\n    setPhoneno(event.target.value)\n    setErrorMessage(null)\n  }\n\n  //function for setting ward name\n  const handleWardName = (event) => {\n    event.preventDefault()\n    setWardName(event.target.value)\n    setErrorMessage(null)\n  }\n\n  //function for setting ward number\n  const handleWardNumber = (event) => {\n    event.preventDefault()\n    setWardNo(event.target.value)\n    setErrorMessage(null)\n  }\n\n  //Function for setting email id\n  const handleEmail = (event) => {\n    event.preventDefault()\n    setSupervisorEmail(event.target.value)\n    setErrorMessage(null)\n  }\n  //Function for making the form for adding new ward visible\n  const handleAddWard = () => {\n    setWardNo(null)\n    setFirstName(null)\n    setLastName(null)\n    setPhoneno(null)\n    setWardName(null)\n    setWardNo(null)\n    setSupervisorEmail(null)\n    setFormVisible(!formVisible)\n  }\n\n  //Function for the API call for adding new ward and supervisor\n  const handleUpdateWardData = () => {\n    let addWardData = {\n      wardName: wardName,\n      wardNumber: wardNo,\n      supervisorFirstName: firstName,\n      supervisorLastName: lastName,\n      supervisorPhoneNo: phoneno,\n      supervisorEmail: supervisorEmail,\n    }\n    setValidated(true)\n    if (wardName && wardNo && firstName && lastName && supervisorEmail && phoneno) {\n      postRequest('corporation/add-ward', addWardData)\n        .then((response) => {\n          setValidated(false)\n          setFirstName(null)\n          setLastName(null)\n          setPhoneno(null)\n          setFormVisible(false)\n          let toastData\n          if (response.message) {\n            getSupervisorData()\n            toastData = { title: Title_Status['TITLE_SUCCESS'], description: response.message }\n          } else {\n            toastData = { title: Title_Status['TITLE_FAILED'], description: response.errorMessage }\n          }\n          setToast(toastData)\n        })\n        .catch((err) => {\n          console.log(err)\n        })\n    } else {\n      setErrorAlert('Something went wrong')\n    }\n  }\n\n  //Function for getting ward-wise supervisor details\n  const getSupervisorData = () => {\n    getRequest('corporation/wardwise-supervisorlist')\n      .then((response) => {\n        setTableData(response.data)\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n  }\n\n  //Function for making form visible for updating supervisor of a ward\n  const handleSupervisorNameChange = (\n    wardNumber,\n    supervisorFirstName,\n    supervisorLastName,\n    phoneNo,\n  ) => {\n    setVisible(!visible)\n    setWardNo(wardNumber)\n    setFirstName(supervisorFirstName)\n    setLastName(supervisorLastName)\n    setPhoneno(phoneNo)\n  }\n\n  //Function for API call for updating supervisor of a ward\n  const updateSupervisor = () => {\n    let supervisorUpdateData = {\n      wardno: wardNo,\n      supervisor_firstname: firstName,\n      supervisor_lastname: lastName,\n      supervisor_phoneno: phoneno,\n    }\n    setValidated(true)\n    if (firstName && lastName && phoneno) {\n      postRequest('corporation/supervisor-update', supervisorUpdateData)\n        .then((response) => {\n          setValidated(false)\n          setFirstName(null)\n          setLastName(null)\n          setPhoneno(null)\n          setFormVisible(false)\n          setVisible(false)\n          let toastData\n          if (response.message) {\n            getSupervisorData()\n            toastData = { title: Title_Status['TITLE_SUCCESS'], description: response.message }\n          } else {\n            toastData = { title: Title_Status['TITLE_FAILED'], description: response.errorMessage }\n          }\n          setToast(toastData)\n          setFirstName(null)\n          setLastName(null)\n          setPhoneno(null)\n        })\n        .catch((err) => {\n          console.log(err)\n        })\n    } else {\n      setErrorAlert('Something went wrong')\n    }\n  }\n\n  const columns = [\n    {\n      name: 'Ward Name',\n      selector: (row) => row.wardName,\n    },\n    {\n      name: 'Supervisor Name',\n      selector: (row) => row.firstName + ' ' + row.lastName,\n    },\n    {\n      name: 'Phone Number',\n      selector: (row) => row.phoneNo,\n    },\n    {\n      name: 'Action',\n      cell: (row) => (\n        <button\n          type=\"button\"\n          className=\"btn btn-primary btn-sm\"\n          color=\"primary\"\n          onClick={() =>\n            handleSupervisorNameChange(row.wardNo, row.firstName, row.lastName, row.phoneNo)\n          }\n        >\n          Update\n        </button>\n      ),\n      button: true,\n    },\n  ]\n  return (\n    <div>\n      <center>\n        <div className=\"w-80\">\n          <Toast toastMessage={toast} />\n          <div className=\"d-flex justify-content-end\">\n            <CButton\n              type=\"button\"\n              color=\"primary\"\n              className=\"align-self-end  px-4\"\n              onClick={handleAddWard}\n            >\n              Add Ward\n            </CButton>\n          </div>\n          <DataTable\n            className=\"table table-striped\"\n            columns={columns}\n            data={tableData}\n            pagination\n            highlightOnHover\n            pointerOnHover\n          />\n          {errorAlert && <div className=\"errormessage\">{errorAlert}</div>}\n        </div>\n      </center>\n\n      <CModal visible={visible} onClose={() => setVisible(false)}>\n        <CModalHeader onClose={() => setVisible(false)}>\n          <CModalTitle>Update Supervisor</CModalTitle>\n        </CModalHeader>\n        <CModalBody>\n          <CForm noValidate validated={validated}>\n            {errorMessage && (\n              <CAlert color=\"danger\" className=\"mt-3\">\n                {errorMessage}\n              </CAlert>\n            )}\n            <CFormLabel>First Name</CFormLabel>\n            <CFormInput\n              type=\"first_name\"\n              name=\"first_name\"\n              className=\"mb-2\"\n              feedbackInvalid=\"Please enter First Name.\"\n              required\n              value={firstName}\n              onChange={(event) => {\n                handleFirstName(event)\n              }}\n            />\n            <CFormLabel>Last Name</CFormLabel>\n            <CFormInput\n              type=\"last_name\"\n              name=\"last_name\"\n              className=\"mb-2\"\n              feedbackInvalid=\"Please enter Last Name.\"\n              required\n              value={lastName}\n              onChange={(event) => {\n                handleLastName(event)\n              }}\n            />\n            <CFormLabel>Phone Number</CFormLabel>\n            <CFormInput\n              type=\"tel\"\n              name=\"phoneno\"\n              className=\"mb-2\"\n              pattern=\"[0-9]{10}\"\n              maxLength={10}\n              minLength={10}\n              feedbackInvalid=\"Please enter Phone number.\"\n              required\n              value={phoneno}\n              onChange={(event) => {\n                handlePhoneNo(event)\n              }}\n            />\n          </CForm>\n        </CModalBody>\n        <CModalFooter>\n          <CButton color=\"primary\" onClick={() => updateSupervisor()}>\n            Save\n          </CButton>\n        </CModalFooter>\n      </CModal>\n\n      <CModal visible={formVisible} onClose={() => setFormVisible(false)}>\n        <CModalHeader onClose={() => setFormVisible(false)}>\n          <CModalTitle>Add Ward</CModalTitle>\n        </CModalHeader>\n        <CModalBody>\n          <CForm noValidate validated={validated}>\n            {errorMessage && (\n              <CAlert color=\"danger\" className=\"mt-3\">\n                {errorMessage}\n              </CAlert>\n            )}\n            <CFormLabel>Ward Name</CFormLabel>\n            <CFormInput\n              type=\"wardName\"\n              name=\"wardName\"\n              className=\"mb-2\"\n              feedbackInvalid=\"Please enter Ward Name.\"\n              required\n              value={wardName}\n              onChange={(event) => {\n                handleWardName(event)\n              }}\n            />\n            <CFormLabel>Ward Number</CFormLabel>\n            <CFormInput\n              type=\"wardno\"\n              name=\"wardno\"\n              className=\"mb-2\"\n              feedbackInvalid=\"Please enter Ward Number\"\n              required\n              value={wardNo}\n              onChange={(event) => {\n                handleWardNumber(event)\n              }}\n            />\n            <CFormLabel>First Name</CFormLabel>\n            <CFormInput\n              type=\"first_name\"\n              name=\"first_name\"\n              className=\"mb-2\"\n              feedbackInvalid=\"Please enter First Name.\"\n              required\n              value={firstName}\n              onChange={(event) => {\n                handleFirstName(event)\n              }}\n            />\n            <CFormLabel>Last Name</CFormLabel>\n            <CFormInput\n              type=\"last_name\"\n              name=\"last_name\"\n              className=\"mb-2\"\n              feedbackInvalid=\"Please enter Last Name.\"\n              required\n              value={lastName}\n              onChange={(event) => {\n                handleLastName(event)\n              }}\n            />\n            <CFormLabel>Phone Number</CFormLabel>\n            <CFormInput\n              type=\"tel\"\n              name=\"phoneno\"\n              className=\"mb-2\"\n              pattern=\"[0-9]{10}\"\n              maxLength={10}\n              minLength={10}\n              feedbackInvalid=\"Please enter Phone number.\"\n              required\n              value={phoneno}\n              onChange={(event) => {\n                handlePhoneNo(event)\n              }}\n            />\n            <CFormLabel>Email</CFormLabel>\n            <CFormInput\n              type=\"email\"\n              name=\"email\"\n              className=\"mb-2\"\n              feedbackInvalid=\"Please enter Email\"\n              required\n              value={supervisorEmail}\n              onChange={(event) => {\n                handleEmail(event)\n              }}\n            />\n          </CForm>\n        </CModalBody>\n        <CModalFooter>\n          <CButton color=\"primary\" onClick={() => handleUpdateWardData()}>\n            ADD\n          </CButton>\n        </CModalFooter>\n      </CModal>\n    </div>\n  )\n}\n\nexport default SupervisorTable\n","import DataTable from 'react-data-table-component'\nimport React, { useState } from 'react'\nimport { CBadge } from '@coreui/react'\nimport { Form } from 'react-bootstrap'\nimport '../../Houseowner/BookingHistory/BookingHistory.css'\nimport { CContainer, CRow, CCol, CCard, CCardBody } from '@coreui/react'\nimport { postRequest } from '../../../../components/Commonhttp/Commonhttp'\nconst WasteCollectionStatus = () => {\n  const [data, setData] = useState([])\n\n  //function for getting waste collection data w.r.t the selected date\n  const fetchCollectionData = (value) => {\n    let wasteCollectionData = { collection_date: value }\n    postRequest('corporation/wastecollectionstatus', wasteCollectionData)\n      .then((data) => {\n        setData(data.data[0])\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n  }\n\n  //function for setting collection date\n  const handleCollectionDate = (e) => {\n    e.preventDefault()\n    fetchCollectionData(e.target.value)\n  }\n  const columns = [\n    {\n      name: 'Ward Name ',\n      selector: (row) => row.wardName,\n    },\n    {\n      name: 'Supervisor',\n      selector: (row) => row.supervisorName,\n    },\n    {\n      name: 'Status',\n      selector: (row) => (\n        <CBadge\n          color={\n            row.status === 'Pending'\n              ? 'warning'\n              : row.status === 'Collector Allocated'\n              ? 'warning'\n              : row.status === 'Cancelled'\n              ? 'danger'\n              : row.status === 'Collected'\n              ? 'success'\n              : 'primary'\n          }\n        >\n          {row.status}\n        </CBadge>\n      ),\n    },\n  ]\n  return (\n    <div>\n      <CContainer>\n        <CCard>\n          <CCardBody>\n            <CRow className=\"align-items-start\">\n              <CCol>\n                <h6>Select Date</h6>\n                <Form.Group controlId=\"dob\">\n                  <Form.Control\n                    type=\"date\"\n                    name=\"dob\"\n                    placeholder=\"Date of Birth\"\n                    onChange={(e) => handleCollectionDate(e)}\n                  />\n                </Form.Group>\n              </CCol>\n            </CRow>\n          </CCardBody>\n        </CCard>\n        <div>\n          <DataTable className=\"table table-striped\" data={data} columns={columns} pagination />\n        </div>\n      </CContainer>\n    </div>\n  )\n}\nexport default WasteCollectionStatus\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport homeLogo from '../../../assets/img.jpg'\nimport Type from './Type'\nimport './home.css'\nfunction Home() {\n  return (\n    <section>\n      <Container fluid className=\"home-section\">\n        <Row>\n          <Col>\n            <img className=\"homeimage\" src={homeLogo} alt=\"home pic\" />\n          </Col>\n          <Col className=\"home-header\">\n            <h1 className=\"home-heading\">\n              <b>Home Trash & Recycling Pickup</b>\n            </h1>\n            <h1 className=\"heading-name\">\n              <b>ZERO WASTE</b>\n            </h1>\n            <div className=\"type\">\n              <Type />\n            </div>\n          </Col>\n        </Row>\n      </Container>\n    </section>\n  )\n}\n\nexport default Home\n","import React from 'react'\nimport Typewriter from 'typewriter-effect'\nimport './home.css'\nfunction Type() {\n  return (\n    <div className=\"type\">\n      <Typewriter\n        options={{\n          strings: [\n            'Go Green Breathe Clean ',\n            'Zero Waste,Save Earth',\n            'Use.Recycle.Reuse',\n            'Think Before You Trash It',\n          ],\n\n          autoStart: true,\n          loop: true,\n          deleteSpeed: 50,\n        }}\n      />\n    </div>\n  )\n}\nexport default Type\n","import DataTable from 'react-data-table-component'\nimport React, { useEffect, useState } from 'react'\nimport { CBadge } from '@coreui/react'\nimport { postRequest } from '../../../../components/Commonhttp/Commonhttp'\nimport '../BookingHistory/BookingHistory.css'\n\nconst BookingStatus = () => {\n  let userId = { userid: sessionStorage.getItem('userid') }\n  const [data, setData] = useState([])\n  useEffect(() => {\n    postRequest('houseowner/bookingstatus', userId).then((res) => {\n      setData(res.data)\n    })\n  }, [])\n  const columns = [\n    {\n      name: 'Booked Date',\n      selector: (row) => row.bookingDate,\n    },\n    {\n      name: 'Collection Date',\n      selector: (row) => row.collectionDate,\n    },\n    {\n      name: 'Waste Type',\n      selector: (row) => row.wasteType,\n    },\n    {\n      name: 'Supervisor Name',\n      selector: (row) => row.supervisorName,\n    },\n    {\n      name: 'Status',\n      selector: (row) => (\n        <CBadge\n          color={\n            row.status === 'Pending'\n              ? 'warning'\n              : row.status === 'Collector Allocated'\n              ? 'warning'\n              : row.status === 'Cancelled'\n              ? 'danger'\n              : row.status === 'Collected'\n              ? 'success'\n              : 'primary'\n          }\n        >\n          {row.status}\n        </CBadge>\n      ),\n    },\n  ]\n  return (\n    <div>\n      <div>\n        <DataTable\n          class=\"table table-striped\"\n          highlightOnHover\n          data={data}\n          columns={columns}\n          pagination\n        />\n      </div>\n    </div>\n  )\n}\nexport default BookingStatus\n","import DataTable from 'react-data-table-component'\nimport React, { useEffect, useState } from 'react'\nimport { CBadge } from '@coreui/react'\nimport { postRequest } from '../../../../components/Commonhttp/Commonhttp'\nimport '../BookingHistory/BookingHistory.css'\n\nconst BookingStatus = () => {\n  let userId = { userid: sessionStorage.getItem('userid') }\n  const [data, setData] = useState([])\n  useEffect(() => {\n    postRequest('houseowner/bookingstatus', userId).then((res) => {\n      setData(res.data)\n    })\n  }, [])\n  const columns = [\n    {\n      name: 'Booked Date',\n      selector: (row) => row.bookingdate,\n    },\n    {\n      name: 'Collection Date',\n      selector: (row) => row.collectiondate,\n    },\n    {\n      name: 'Waste Type',\n      selector: (row) => row.wastetype,\n    },\n    {\n      name: 'Supervisor Name',\n      selector: (row) => row.supervisorname,\n    },\n    {\n      name: 'Status',\n      selector: (row) => (\n        <CBadge\n          color={\n            row.status === 'Pending'\n              ? 'warning'\n              : row.status === 'Collector Allocated'\n              ? 'warning'\n              : row.status === 'Cancelled'\n              ? 'danger'\n              : row.status === 'Collected'\n              ? 'success'\n              : 'primary'\n          }\n        >\n          {row.status}\n        </CBadge>\n      ),\n    },\n  ]\n  return (\n    <div>\n      <div>\n        <DataTable\n          class=\"table table-striped\"\n          highlightOnHover\n          data={data}\n          columns={columns}\n          pagination\n        />\n      </div>\n    </div>\n  )\n}\nexport default BookingStatus\n","import DonutChart from 'react-donut-chart'\nimport React from 'react'\nimport { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { CWidgetStatsD, CRow, CCol } from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilCalendarCheck, cilMoney, cilCalendar } from '@coreui/icons'\nimport { CCard, CCardBody } from '@coreui/react'\nimport { postRequest } from 'src/components/Commonhttp/Commonhttp'\nimport { Chart, ArcElement } from 'chart.js'\nChart.register(ArcElement)\n\nconst WidgetsBrand = ({ withCharts }) => {\n  const [totalAmount, setTotalAmount] = useState(0)\n  const [slotCount, setSlotCount] = useState(0)\n  const [pendingSlots, setPendingSlots] = useState(0)\n  const [plasticWasteData, setPlasticWasteData] = useState()\n  const [foodWasteData, setFoodWasteData] = useState()\n  const [metalWasteData, setMetalWasteData] = useState()\n  const [ewasteData, setEwasteData] = useState()\n  let userId = parseInt(sessionStorage.getItem('userid'))\n  let widgetData = { userid: userId }\n\n  const reactDonutChartdata = [\n    {\n      label: 'Plastic Waste',\n      value: plasticWasteData,\n    },\n    {\n      label: 'Food Waste',\n      value: foodWasteData,\n    },\n    {\n      label: 'E-Waste',\n      value: ewasteData,\n    },\n    {\n      label: 'Metal Waste',\n      value: metalWasteData,\n    },\n  ]\n  const reactDonutChartBackgroundColor = ['#00E396', '#FEB019', '#FF4560', '#775DD0']\n  const reactDonutChartInnerRadius = 0.5\n  const reactDonutChartSelectedOffset = 0.04\n  let reactDonutChartStrokeColor = '#FFFFFF'\n  const reactDonutChartOnMouseEnter = (item) => {\n    let color = reactDonutChartdata.find((q) => q.label === item.label).color\n    reactDonutChartStrokeColor = color\n  }\n  useEffect(() => {\n    getData()\n  }, [])\n\n  //function for getting data for dashboard\n  const getData = () => {\n    postRequest('houseowner/billgeneration', widgetData)\n      .then((data) => {\n        setTotalAmount(data.grandTotal)\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n    postRequest('houseowner/houseownerdashboard', widgetData)\n      .then((data) => {\n        setSlotCount(data.data.slotCount)\n        setPendingSlots(data.data.pendingSlots)\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n    postRequest('houseowner/houseownerdashboardgraph', widgetData)\n      .then((data) => {\n        setPlasticWasteData(data.data.plastic)\n        setFoodWasteData(data.data.food)\n        setEwasteData(data.data.ewaste)\n        setMetalWasteData(data.data.metal)\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n  }\n\n  return (\n    <>\n      <CRow>\n        <CCol>\n          <CWidgetStatsD\n            className=\"mb-4\"\n            icon={<CIcon icon={cilCalendarCheck} height={52} className=\"my-4 text-white\" />}\n            values={[{ title: 'Slot Booked', value: slotCount }]}\n            style={{\n              '--cui-card-cap-bg': '#3b5998',\n            }}\n          />\n        </CCol>\n\n        <CCol>\n          <CWidgetStatsD\n            className=\"mb-4\"\n            icon={<CIcon icon={cilMoney} height={52} className=\"my-4 text-white\" />}\n            values={[{ title: 'Pending Payments', value: totalAmount }]}\n            style={{\n              '--cui-card-cap-bg': '#00aced',\n            }}\n          />\n        </CCol>\n\n        <CCol>\n          <CWidgetStatsD\n            className=\"mb-4\"\n            color=\"warning\"\n            icon={<CIcon icon={cilCalendar} height={52} className=\"my-4 text-white\" />}\n            values={[{ title: 'Pending Slots', value: pendingSlots }]}\n          />\n        </CCol>\n      </CRow>\n      <CCard>\n        <CCardBody>\n          <center>\n            {plasticWasteData && (\n              <DonutChart\n                width={750}\n                onMouseEnter={(item) => reactDonutChartOnMouseEnter(item)}\n                strokeColor={reactDonutChartStrokeColor}\n                data={reactDonutChartdata}\n                colors={reactDonutChartBackgroundColor}\n                innerRadius={reactDonutChartInnerRadius}\n                selectedOffset={reactDonutChartSelectedOffset}\n              />\n            )}\n          </center>\n        </CCardBody>\n      </CCard>\n    </>\n  )\n}\n\nWidgetsBrand.propTypes = {\n  withCharts: PropTypes.bool,\n}\n\nexport default WidgetsBrand\n","import React from 'react'\nimport WidgetsDropdown from '../../../widgets/WidgetsBrand'\n\nconst Homeservices = () => {\n  return (\n    <>\n      <WidgetsDropdown />\n    </>\n  )\n}\n\nexport default Homeservices\n","import DataTable from 'react-data-table-component'\nimport React, { useEffect, useState } from 'react'\nimport { postRequest } from '../../../../components/Commonhttp/Commonhttp'\n\nconst PaymentHistory = () => {\n  let userId = { userid: sessionStorage.getItem('userid') }\n  const [data, setData] = useState([])\n  useEffect(() => {\n    postRequest('houseowner/paymenthistory', userId).then((res) => {\n      setData(res.data)\n    })\n  }, [])\n  const columns = [\n    {\n      name: 'Total Amount',\n      selector: (row) => row.totalAmount,\n    },\n    {\n      name: 'Paid Date',\n      selector: (row) => row.payDate,\n    },\n  ]\n  return (\n    <div>\n      <div className=\"bookingstatus\">\n        <DataTable className=\"statustable\" data={data} columns={columns} pagination />\n      </div>\n    </div>\n  )\n}\n\nexport default PaymentHistory\n","import React, { useEffect, useState } from 'react'\nimport DataTable from 'react-data-table-component'\nimport { useNavigate } from 'react-router-dom'\nimport { postRequest } from '../../../../components/Commonhttp/Commonhttp'\nimport './Invoice.css'\n\nconst Bill = () => {\n  const navigate = useNavigate()\n  const [data, setData] = useState([])\n  const [totalAmount, setTotalAmount] = useState('')\n\n  //function for submit button click for proceeding to payment\n  const submitHandler = (event) => {\n    navigate('/payment')\n  }\n  useEffect(() => {\n    getInvoice()\n  }, [])\n\n  //funtion for getting pending payment bill\n  const getInvoice = () => {\n    let billGenerationData = { userid: parseInt(sessionStorage.getItem('userid')) }\n    postRequest('houseowner/billgeneration', billGenerationData)\n      .then((response) => {\n        setTotalAmount(response.grandTotal)\n        setData(response.bill)\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n  }\n  const columns = [\n    {\n      name: 'Waste Type',\n      selector: (row) => row.waste_type,\n    },\n    {\n      name: 'Quantity',\n      selector: (row) => row.quantity,\n    },\n    {\n      name: 'Unit Price',\n      selector: (row) => row.unit_price,\n    },\n    {\n      name: 'Total',\n      selector: (row) => row.total,\n    },\n  ]\n  if (totalAmount === 0 || totalAmount === null) {\n    return (\n      <div>\n        <center>\n          <div className=\"card text-center\" style={{ width: '18rem' }}>\n            <div className=\"card-body\">\n              <p className=\"card-text\">No Payment Due</p>\n              <a href=\"/houseowner-dashboard\" className=\"btn btn-primary\">\n                Dashboard\n              </a>\n            </div>\n          </div>\n        </center>\n      </div>\n    )\n  } else {\n    return (\n      <div>\n        <DataTable\n          className=\"table table-striped\"\n          highlightOnHover\n          columns={columns}\n          data={data}\n          pagination\n        />\n        <center>\n          <div className=\"card text-center\" style={{ width: '18rem' }}>\n            <div className=\"card-body\">\n              <h5 className=\"card-title\">Total Amount: {totalAmount}</h5>\n              <button type=\"submit\" onClick={submitHandler} className=\"btn btn-primary\">\n                Pay Now\n              </button>\n            </div>\n          </div>\n        </center>\n      </div>\n    )\n  }\n}\n\nexport default Bill\n","const Status = {\n  STATUS_PAID: 1,\n}\n\nexport default Status\n","const Payment = {\n  KEY: 'rzp_test_vCz7dMxFI6qC94',\n  KEY_SECRET: '395d1wGWipzT22lMFrAspjjx',\n  SUPERVISOR: 4,\n}\n\nexport default Payment\n","import React, { useState } from 'react'\nimport mainbg from '../../../../assets/images/HouseOwner/RazorPay/main-bg.png'\nimport icons from '../../../../assets/images/HouseOwner/RazorPay/icons.png'\nimport { useNavigate } from 'react-router-dom'\nimport { postRequest } from '../../../../components/Commonhttp/Commonhttp'\nimport { CButton, CCard, CCardBody, CForm, CFormInput, CInputGroup } from '@coreui/react'\nimport Status from 'src/enums/Status'\nimport Payments from '../../../../enums/Payments'\nconst Payment = () => {\n  const current = new Date()\n  const paydate = `${current.getFullYear()}-${current.getMonth() + 1}-${current.getDate()}`\n  const navigate = useNavigate()\n  const [totalAmount, setTotalAmount] = useState('')\n  let billGenerationData = { userid: parseInt(sessionStorage.getItem('userid')) }\n  postRequest('houseowner/billgeneration', billGenerationData).then((res) => {\n    setTotalAmount(res.grandTotal)\n  })\n\n  //function for completing payment through razor pay\n  const handlesubmit = (e) => {\n    e.preventDefault()\n    let options = {\n      key: Payments.KEY,\n      key_secret: Payments.KEY_SECRET,\n      amount: totalAmount * 100,\n      currenty: 'INR',\n      name: 'Zero_Waste',\n      description: 'Zero Waste Project',\n      handler: (response) => {\n        const billPaymentData = {\n          userid: parseInt(sessionStorage.getItem('userid')),\n          paydate,\n          grandtotal: totalAmount,\n          status: Status.STATUS_PAID,\n        }\n        postRequest('houseowner/billpayment', billPaymentData).then((resJson) => {\n          if (resJson.message) {\n            navigate('/houseowner-dashboard')\n          }\n        })\n      },\n      prefill: {\n        name: '',\n        email: '',\n        contact: '',\n      },\n      notes: {\n        address: '',\n      },\n      theme: {\n        color: '#000',\n      },\n    }\n    let pay = new window.Razorpay(options)\n    pay.open()\n  }\n  return (\n    <section className=\"main\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-lg-8\">\n            <div className=\"column-wrap justify-content-between\">\n              <div className=\"banner-img\">\n                <img src={mainbg} alt=\"Razorpay demo reacjs\" />\n              </div>\n              <div className=\"title\">\n                <div className=\"title-content\">\n                  <h1>Razorpay Payment</h1>\n                </div>\n              </div>\n              <div className=\"technology\">\n                <div className=\"tech-logo\">\n                  <img src={icons} alt=\"Razorpay test payment\" />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-lg-4\">\n            <div className=\"column-wrap justify-content-center\">\n              <div className=\"fxt-form\">\n                <CCard className=\"p-4\">\n                  <CCardBody>\n                    <h3 className=\"mb-3\">\n                      <center>Pay Now</center>\n                    </h3>\n                    <CForm className=\"row g-2 needs-validation\">\n                      <CInputGroup>\n                        <CFormInput type=\"text\" value={totalAmount} placeholder={totalAmount} />\n                      </CInputGroup>\n                      <CButton type=\"submit\" color=\"primary\" onClick={handlesubmit}>\n                        Continue\n                      </CButton>\n                    </CForm>\n                  </CCardBody>\n                </CCard>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  )\n}\n\nexport default Payment\n","import React from 'react'\nimport { useState, useEffect } from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardGroup,\n  CCol,\n  CContainer,\n  CForm,\n  CFormInput,\n  CInputGroup,\n  CInputGroupText,\n  CRow,\n  CFormSelect,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilLineWeight, cilTrash } from '@coreui/icons'\nimport { postRequest, getRequest } from '../../../../components/Commonhttp/Commonhttp'\nimport Toast from 'src/components/Toast/Toast'\nimport Title_Status from '../../../../enums/ToastTitle'\n\nconst SlotBooking = () => {\n  const current = new Date()\n  const booking_date = `${current.getFullYear()}-${current.getMonth() + 1}-${current.getDate()}`\n  const [waste, setWaste] = useState()\n  const [quantity, setQuantity] = useState()\n  const [wasteData, setWasteData] = useState()\n  const [validated, setValidated] = useState(false)\n  const [toast, setToast] = useState({})\n  let userId = parseInt(sessionStorage.getItem('userid'))\n\n  useEffect(() => {\n    getWasteData()\n  }, [])\n\n  //function for getting waste list\n  const getWasteData = () => {\n    getRequest('corporation/wastedata')\n      .then((response) => {\n        setWasteData(response.data)\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n  }\n  //function for setting waste type\n  const handleWaste = (e) => {\n    e.preventDefault()\n    setWaste(e.target.value)\n  }\n\n  //function for setting waste quantity\n  const handleQuantity = (e) => {\n    e.preventDefault()\n    setQuantity(e.target.value)\n  }\n\n  //function for submitting the for and API call\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    const form = event.currentTarget\n    if (form.checkValidity() === false) {\n      setValidated(false)\n      event.preventDefault()\n      event.stopPropagation()\n    }\n    setValidated(true)\n    if (waste && quantity) {\n      const slotbookingdata = { waste_id: waste, quantity, booking_date, userId }\n      postRequest('houseowner/slotbooking', slotbookingdata)\n        .then((resJson) => {\n          let toastData\n          if (resJson.message) {\n            toastData = { title: Title_Status['TITLE_SUCCESS'], description: resJson.message }\n          } else {\n            toastData = { title: Title_Status['TITLE_FAILED'], description: resJson.errorMessage }\n          }\n          setToast(toastData)\n        })\n        .catch((err) => {\n          console.log(err)\n        })\n    }\n  }\n\n  return (\n    <div className=\"bg-white min-vh-80 d-flex flex-row align-items-center\">\n      <Toast toastMessage={toast} />\n      <CContainer>\n        <CRow className=\"justify-content-center\">\n          <CCol md={8}>\n            <CCardGroup>\n              <CCard className=\"p-4\">\n                <CCardBody>\n                  <CForm\n                    md={8}\n                    className=\"row g-3 needs-validation\"\n                    noValidate\n                    validated={validated}\n                    onSubmit={handleSubmit}\n                  >\n                    <h1>Book Your Slot!</h1>\n                    <CInputGroup className=\"mb-3\">\n                      <CInputGroupText>\n                        <CIcon icon={cilTrash} />\n                      </CInputGroupText>\n                      <CFormSelect\n                        type=\"select\"\n                        placeholder=\"Select Waste Type\"\n                        aria-label=\"Default select example\"\n                        className=\"mb-.5\"\n                        feedbackInvalid=\"Please select Waste type.\"\n                        id=\"validationCustom01\"\n                        required\n                        onChange={(e) => handleWaste(e)}\n                      >\n                        <option>Select Waste type</option>\n                        {wasteData?.map((waste) => {\n                          return (\n                            <option key={waste.id} value={waste.id}>\n                              {waste.wasteType}\n                            </option>\n                          )\n                        })}\n                      </CFormSelect>\n                    </CInputGroup>\n\n                    <CInputGroup className=\"mb-4\">\n                      <CInputGroupText>\n                        <CIcon icon={cilLineWeight} />\n                      </CInputGroupText>\n                      <CFormInput\n                        type=\"number\"\n                        min=\"1\"\n                        placeholder=\"Quantity(in Kg)\"\n                        aria-describedby=\"validationCustom03Feedback\"\n                        feedbackInvalid=\"Please enter quantity.\"\n                        onChange={(e) => handleQuantity(e)}\n                        required\n                      />\n                    </CInputGroup>\n\n                    <CRow>\n                      <CCol xs={6}>\n                        <CButton type=\"submit\" color=\"primary\" className=\"px-4\">\n                          Submit\n                        </CButton>\n                      </CCol>\n                    </CRow>\n                  </CForm>\n                </CCardBody>\n              </CCard>\n            </CCardGroup>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </div>\n  )\n}\n\nexport default SlotBooking\n","import {\n  CButton,\n  CCard,\n  CCardBody,\n  CCol,\n  CForm,\n  CRow,\n  CModal,\n  CModalHeader,\n  CCardHeader,\n  CCardTitle,\n  CFormLabel,\n  CAlert,\n  CFormInput,\n  CModalTitle,\n  CModalBody,\n  CModalFooter,\n} from '@coreui/react'\nimport { useState, useEffect } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { CCallout } from '@coreui/react'\nimport { postRequest } from '../../../components/Commonhttp/Commonhttp'\nimport Role from '../../../enums/Roles'\nimport Toast from 'src/components/Toast/Toast'\nimport Title_Status from '../../../enums/ToastTitle'\n\nconst UserProfile = () => {\n  const navigate = useNavigate()\n  let employeeId = parseInt(sessionStorage.getItem('employee_id'))\n  let roleId = parseInt(sessionStorage.getItem('role'))\n  let userId = parseInt(sessionStorage.getItem('userid'))\n  const [firstname, setFirstname] = useState()\n  const [lastname, setLastname] = useState()\n  const [email, setEmail] = useState()\n  const [address, setAddress] = useState()\n  const [phoneno, setPhoneno] = useState()\n  const [wardname, setWardname] = useState()\n  const [visible, setVisible] = useState(false)\n  const [oldPassword, setOldPassword] = useState()\n  const [newPassword, setNewPassword] = useState()\n  const [confirmPassword, setConfirmPassword] = useState()\n  const [toast, setToast] = useState({})\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [validated, setValidated] = useState(false)\n  const [role, setRole] = useState()\n  const [avatar, setAvatar] = useState()\n\n  useEffect(() => {\n    getProfileData()\n  }, [])\n\n  const getProfileData = () => {\n    if (roleId == Role.HOUSEOWNER) {\n      let houseownerProfileData = { userid: userId }\n      postRequest('houseowner/userprofile', houseownerProfileData)\n        .then((data) => {\n          setFirstname(data.data[0].firstName)\n          setLastname(data.data[0].lastName)\n          setEmail(data.data[0].email)\n          setPhoneno(data.data[0].phoneNo)\n          setAddress(data.data[0].address)\n          setWardname(data.data[0].wardName)\n          setAvatar(data.data[0].firstName[0] + data.data[0].lastName[0])\n        })\n        .catch((err) => {\n          console.log(err)\n        })\n    } else {\n      let corporationProfileData = { userId: employeeId, roleId: roleId }\n      postRequest('corporation/userprofile', corporationProfileData)\n        .then((data) => {\n          if (roleId === Role.SUPERVISOR) {\n            setFirstname(data.data[0].firstName)\n            setLastname(data.data[0].lastName)\n            setWardname(data.data[0].wardName)\n          }\n          setRole(data.data[0].role)\n          setEmail(data.data[0].email)\n          setPhoneno(data.data[0].phoneNo)\n          setAvatar(data.data[0].role[0])\n        })\n        .catch((err) => {\n          console.log(err)\n        })\n    }\n  }\n\n  //function for making cmodal form visible\n  const handlePasswordChange = () => {\n    setVisible(true)\n  }\n  //function for setting old password\n  const handleOldPassword = (event) => {\n    event.preventDefault()\n    setOldPassword(event.target.value)\n    setErrorMessage(null)\n  }\n\n  //function for setting new password\n  const handleNewPassword = (event) => {\n    event.preventDefault()\n    setNewPassword(event.target.value)\n    setErrorMessage(null)\n  }\n\n  //function for setting confirm password\n  const handleConfirmPassword = (event) => {\n    event.preventDefault()\n    setConfirmPassword(event.target.value)\n    setErrorMessage(null)\n  }\n\n  //function for API call for update password functionality\n  const updatePassword = () => {\n    setValidated(true)\n    if (oldPassword && newPassword && confirmPassword) {\n      if (oldPassword === newPassword) {\n        setErrorMessage('Dont use old password. Give a new one')\n      }\n      if (!newPassword || !confirmPassword || newPassword != confirmPassword) {\n        setErrorMessage('New password and confirm password do not match')\n      }\n      let data = {\n        userid: userId,\n        old_password: oldPassword,\n        new_password: newPassword,\n      }\n\n      postRequest('login/changepassword', data).then((response) => {\n        setValidated(false)\n        setOldPassword('')\n        setNewPassword('')\n        setConfirmPassword('')\n        setVisible(false)\n        let toastData\n        if (response.errorMessage) {\n          toastData = { title: Title_Status['TITLE_SUCCESS'], description: response.message }\n        } else {\n          toastData = { title: Title_Status['TITLE_FAILED'], description: response.errorMessage }\n        }\n        setToast(toastData)\n      })\n    }\n  }\n\n  //funtion for handling button click and navigate to dashboard\n  const handleButton = () => {\n    navigate('/houseowner-dashboard')\n  }\n  if (roleId === Role.HOUSEOWNER || roleId === Role.SUPERVISOR) {\n    return (\n      <div>\n        <Toast toastMessage={toast} />\n        <CCard>\n          <CCardHeader>My Profile</CCardHeader>\n          <CCardBody>\n            <center>\n              <CRow className=\"align-items-center\">\n                <CCol className=\"align-self-center\">\n                  <CCardTitle>\n                    <div className=\"avatar avatar-lg bg-secondary\">{avatar}</div>\n                  </CCardTitle>\n                </CCol>\n              </CRow>\n              <CCardTitle>\n                {firstname}&nbsp;{lastname}\n              </CCardTitle>\n            </center>\n            <CForm className=\"row g-3\">\n              <CCol md={6}>\n                <CCallout color=\"success\" id=\"inputEmail4\">\n                  <b>Email:</b>&nbsp; {email}\n                </CCallout>\n              </CCol>\n              <CCol md={6}>\n                <CCallout color=\"success\" id=\"inputEmail4\">\n                  <b>Phone No:</b>&nbsp; {phoneno}\n                </CCallout>\n              </CCol>\n              {roleId === Role.HOUSEOWNER ? (\n                <CCol xs={12}>\n                  <CCallout color=\"success\" id=\"inputAddress\">\n                    <b>Address:</b>&nbsp; {address}\n                  </CCallout>\n                </CCol>\n              ) : null}\n              <CCol xs={12}>\n                <CCallout color=\"success\" id=\"inputAddress\">\n                  <b>Ward Name:</b>&nbsp; {wardname}\n                </CCallout>\n              </CCol>\n              <CCol md={6}>\n                <CCallout color=\"success\" id=\"inputCity\">\n                  <b>City:</b>&nbsp; Trivandrum\n                </CCallout>\n              </CCol>\n              <CCol md={4}>\n                <CCallout color=\"success\" id=\"inputState\">\n                  <b>State:</b>&nbsp; Kerala\n                </CCallout>\n              </CCol>\n            </CForm>\n            <div className=\"d-flex justify-content-between mt-3\">\n              <CButton type=\"button\" onClick={handleButton}>\n                Back to Dashboard\n              </CButton>\n              <CButton type=\"button\" className=\"ml-3 mt-3\" onClick={handlePasswordChange}>\n                Change Password\n              </CButton>\n            </div>\n          </CCardBody>\n        </CCard>\n        <CModal size=\"lg\" visible={visible} onClose={() => setVisible(false)}>\n          <CModalHeader>\n            <CModalTitle>Update password of {email}</CModalTitle>\n          </CModalHeader>\n          <CModalBody>\n            <CForm noValidate validated={validated}>\n              {errorMessage && (\n                <CAlert color=\"danger\" className=\"mt-3\">\n                  {errorMessage}\n                </CAlert>\n              )}\n              <CFormLabel htmlFor=\"old_password\">Old Password</CFormLabel>\n              <CFormInput\n                type=\"password\"\n                name=\"old_password\"\n                className=\"mb-2\"\n                feedbackInvalid=\"Please give old password.\"\n                required\n                onChange={(event) => {\n                  handleOldPassword(event)\n                }}\n              />\n              <CFormLabel htmlFor=\"new_password\">New Password</CFormLabel>\n              <CFormInput\n                type=\"password\"\n                name=\"new_password\"\n                className=\"mb-2\"\n                feedbackInvalid=\"Please give new password.\"\n                required\n                onChange={(event) => {\n                  handleNewPassword(event)\n                }}\n              />\n              <CFormLabel htmlFor=\"confirmPassword\">Confirm Password</CFormLabel>\n              <CFormInput\n                type=\"password\"\n                name=\"confirmPassword\"\n                className=\"mb-2\"\n                feedbackInvalid=\"Please confirm new password.\"\n                required\n                onChange={(event) => {\n                  handleConfirmPassword(event)\n                }}\n              />\n            </CForm>\n          </CModalBody>\n          <CModalFooter>\n            <CButton\n              type=\"submit\"\n              onClick={(event) => {\n                event.preventDefault()\n                updatePassword()\n              }}\n            >\n              Update\n            </CButton>\n\n            <CButton color=\"secondary\" onClick={() => setVisible(false)}>\n              Close\n            </CButton>\n          </CModalFooter>\n        </CModal>\n      </div>\n    )\n  } else {\n    return (\n      <div>\n        <Toast toastMessage={toast} />\n        <CCard>\n          <CCardHeader>My Profile</CCardHeader>\n          <CCardBody>\n            <center>\n              <CRow className=\"align-items-center\">\n                <CCol className=\"align-self-center\">\n                  <CCardTitle>\n                    <div className=\"avatar avatar-lg bg-secondary\">{avatar}</div>\n                  </CCardTitle>\n                </CCol>\n              </CRow>\n              <CCardTitle>{role}</CCardTitle>\n            </center>\n            <CForm className=\"row g-3\">\n              <CCol md={6}>\n                <CCallout color=\"success\" id=\"inputEmail4\">\n                  <b>Email:</b>&nbsp; {email}\n                </CCallout>\n              </CCol>\n              <CCol md={6}>\n                <CCallout color=\"success\" id=\"inputEmail4\">\n                  <b>Phone No:</b>&nbsp; {phoneno}\n                </CCallout>\n              </CCol>\n              <CCol md={6}>\n                <CCallout color=\"success\" id=\"inputCity\">\n                  <b>City:</b>&nbsp; Trivandrum\n                </CCallout>\n              </CCol>\n              <CCol md={4}>\n                <CCallout color=\"success\" id=\"inputState\">\n                  <b>State:</b>&nbsp; Kerala\n                </CCallout>\n              </CCol>\n            </CForm>\n            <div className=\"d-flex justify-content-between mt-3\">\n              <CButton type=\"button\" onClick={handleButton}>\n                Back to Dashboard\n              </CButton>\n              <CButton type=\"button\" className=\"ml-3 mt-3\" onClick={handlePasswordChange}>\n                Change Password\n              </CButton>\n            </div>\n          </CCardBody>\n        </CCard>\n        <CModal size=\"lg\" visible={visible} onClose={() => setVisible(false)}>\n          <CModalHeader>\n            <CModalTitle>Update password of {email}</CModalTitle>\n          </CModalHeader>\n          <CModalBody>\n            <CForm noValidate validated={validated}>\n              {errorMessage && (\n                <CAlert color=\"danger\" className=\"mt-3\">\n                  {errorMessage}\n                </CAlert>\n              )}\n              <CFormLabel htmlFor=\"old_password\">Old Password</CFormLabel>\n              <CFormInput\n                type=\"password\"\n                name=\"old_password\"\n                className=\"mb-2\"\n                feedbackInvalid=\"Please give old password.\"\n                required\n                onChange={(event) => {\n                  handleOldPassword(event)\n                }}\n              />\n              <CFormLabel htmlFor=\"new_password\">New Password</CFormLabel>\n              <CFormInput\n                type=\"password\"\n                name=\"new_password\"\n                className=\"mb-2\"\n                feedbackInvalid=\"Please give new password.\"\n                required\n                onChange={(event) => {\n                  handleNewPassword(event)\n                }}\n              />\n              <CFormLabel htmlFor=\"confirmPassword\">Confirm Password</CFormLabel>\n              <CFormInput\n                type=\"password\"\n                name=\"confirmPassword\"\n                className=\"mb-2\"\n                feedbackInvalid=\"Please confirm new password.\"\n                required\n                onChange={(event) => {\n                  handleConfirmPassword(event)\n                }}\n              />\n            </CForm>\n          </CModalBody>\n          <CModalFooter>\n            <CButton\n              type=\"submit\"\n              onClick={(event) => {\n                event.preventDefault()\n                updatePassword()\n              }}\n            >\n              Update\n            </CButton>\n\n            <CButton color=\"secondary\" onClick={() => setVisible(false)}>\n              Close\n            </CButton>\n          </CModalFooter>\n        </CModal>\n      </div>\n    )\n  }\n}\nexport default UserProfile\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\n//function for setting auth context\nexport const AuthContext = React.createContext({\n  token: null,\n  isLoggedIn: false,\n  login: (token) => {},\n  setUser: (user) => {},\n  logout: () => {},\n})\n\n//function for setting auth context during login and logout\nexport const AuthContextProvider = (props) => {\n  const [token, setToken] = useState(null)\n  const userIsLoggedIn = !!token\n  const logoutHandler = () => {\n    setToken(null)\n  }\n  const loginHandler = (token) => {\n    setToken(token)\n  }\n  const contextValue = {\n    isLoggedIn: userIsLoggedIn,\n    login: loginHandler,\n    logout: logoutHandler,\n  }\n  return <AuthContext.Provider value={contextValue}>{props.children}</AuthContext.Provider>\n}\n\nAuthContextProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n}\nexport default AuthContext\n","import React from 'react'\nimport { useState, useContext } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { Link } from 'react-router-dom'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardGroup,\n  CCol,\n  CContainer,\n  CForm,\n  CFormInput,\n  CInputGroup,\n  CInputGroupText,\n  CRow,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilLockLocked, cilUser } from '@coreui/icons'\nimport AuthContext from './Authcontext'\nimport './Login.css'\nimport Roles from 'src/enums/Roles'\nimport { postRequest } from '../../../components/Commonhttp/Commonhttp'\n\nconst Login = () => {\n  const navigate = useNavigate()\n  const authCtx = useContext(AuthContext)\n  const [validated, setValidated] = useState(false)\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [userValidationErrorr, setUserValidationErrorr] = useState('')\n\n  //function for setting email\n  const handleEmail = (e) => {\n    e.preventDefault()\n    setEmail(e.target.value)\n  }\n\n  //function for setting password\n  const handlePassword = (e) => {\n    e.preventDefault()\n    setPassword(e.target.value)\n    setUserValidationErrorr('')\n  }\n\n  //function for navigating to password changing page\n  const handleForgotPassword = () => {\n    navigate('/forgotpassword')\n  }\n\n  //function for form submit and API call for login functionality\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    const form = event.currentTarget\n    if (form.checkValidity() === false) {\n      setValidated(false)\n      event.stopPropagation()\n    }\n    setValidated(true)\n    if (email && password) {\n      const logindata = { email, password }\n      postRequest('login/', logindata)\n        .then((resJson) => {\n          sessionStorage.setItem('jwt', resJson.token)\n          sessionStorage.setItem('role', resJson.role)\n          sessionStorage.setItem('userid', resJson.userid)\n          if (resJson.role === Roles.HOUSEOWNER) {\n            authCtx.isLoggedIn = true\n            authCtx.login(resJson.token)\n            navigate('/houseowner-dashboard')\n            authCtx.isLoggedIn = resJson.token\n          } else if (resJson.role === Roles.SUPERADMIN || resJson.role === Roles.ADMIN) {\n            sessionStorage.setItem('employee_id', resJson.employee_id)\n            authCtx.isLoggedIn = true\n            authCtx.login(resJson.token)\n            navigate('/wastereport')\n            authCtx.isLoggedIn = resJson.token\n          } else if (resJson.role === Roles.SUPERVISOR) {\n            sessionStorage.setItem('employee_id', resJson.employee_id)\n            authCtx.isLoggedIn = true\n            authCtx.login(resJson.token)\n            navigate('/supervisor-dashboard')\n          } else {\n            setUserValidationErrorr(resJson.message)\n            setValidated(false)\n          }\n        })\n        .catch((err) => {\n          console.log(err)\n        })\n    }\n  }\n\n  return (\n    <div className=\"bg-white max-vh-70 d-flex flex-row align-items-center\">\n      <CContainer>\n        <CRow className=\"justify-content-center\">\n          <CCol md={10}>\n            <CCardGroup>\n              <CCard className=\"p-4\">\n                <CCardBody>\n                  <CForm\n                    className=\"row g-3 needs-validation\"\n                    noValidate\n                    validated={validated}\n                    onSubmit={handleSubmit}\n                  >\n                    <h1>Login</h1>\n                    <p className=\"text-medium-emphasis\">Sign In to your account</p>\n                    <CInputGroup className=\"mb-3\">\n                      <CInputGroupText>\n                        <CIcon icon={cilUser} />\n                      </CInputGroupText>\n                      <CFormInput\n                        type=\"email\"\n                        aria-describedby=\"validationCustom03Feedback\"\n                        feedbackInvalid=\"Please enter email.\"\n                        placeholder=\"Email\"\n                        required\n                        onChange={(e) => handleEmail(e)}\n                      />\n                    </CInputGroup>\n                    <CInputGroup className=\"mb-4\">\n                      <CInputGroupText>\n                        <CIcon icon={cilLockLocked} />\n                      </CInputGroupText>\n                      <CFormInput\n                        type=\"password\"\n                        aria-describedby=\"validationCustom03Feedback\"\n                        feedbackInvalid=\"Please enter password.\"\n                        placeholder=\"Password\"\n                        required\n                        onChange={(e) => handlePassword(e)}\n                      />\n                    </CInputGroup>\n                    <CRow>\n                      <CCol xs={4}>\n                        <CButton type=\"submit\" color=\"primary\" className=\"px-4\">\n                          Login\n                        </CButton>\n                      </CCol>\n                      <CCol xs={8}>\n                        <CButton\n                          color=\"link\"\n                          className=\"forgotpassword\"\n                          size=\"sm\"\n                          onClick={handleForgotPassword}\n                        >\n                          Forgot password?\n                        </CButton>\n                      </CCol>\n                      {userValidationErrorr && (\n                        <div className=\"errormessage\">{userValidationErrorr}</div>\n                      )}\n                    </CRow>\n                  </CForm>\n                </CCardBody>\n              </CCard>\n              <CCard className=\"text-white bg-primary py-5\">\n                <CCardBody className=\"text-center\">\n                  <div>\n                    <h2>Sign up</h2>\n                    <p>\n                      Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod\n                      tempor incididunt ut labore et dolore magna aliqua.\n                    </p>\n                    <Link to=\"/register\">\n                      <CButton color=\"primary\" className=\"mt-3\" active tabIndex={-1}>\n                        Register Now!\n                      </CButton>\n                    </Link>\n                  </div>\n                </CCardBody>\n              </CCard>\n            </CCardGroup>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </div>\n  )\n}\n\nexport default Login\n","import React from 'react'\nimport { useState, useEffect } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCol,\n  CContainer,\n  CForm,\n  CFormInput,\n  CInputGroup,\n  CInputGroupText,\n  CRow,\n  CFormSelect,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport {\n  cilLockLocked,\n  cilUser,\n  cilAddressBook,\n  cilLocationPin,\n  cilBuilding,\n  cilPhone,\n} from '@coreui/icons'\nimport { postRequest, getRequest } from '../../../components/Commonhttp/Commonhttp'\n\nconst Register = () => {\n  const navigate = useNavigate()\n  const [validated, setValidated] = useState(false)\n  const [firstName, setFirstname] = useState('')\n  const [lastName, setLastname] = useState('')\n  const [address, setAddress] = useState('')\n  const [pincode, setPincode] = useState('')\n  const [ward, setWard] = useState('')\n  const [phoneno, setPhoneno] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [emailValidationErrorr, setEmailValidationErrorr] = useState('')\n  const [phoneNoValidationErrorr, setPhoneNoValidationErrorr] = useState('')\n\n  const [wardData, setWardData] = useState()\n  useEffect(() => {\n    getWardData()\n  }, [])\n\n  //function for getting ward list\n  const getWardData = () => {\n    getRequest('corporation/warddata')\n      .then(function (data) {\n        setWardData(data.data)\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n  }\n\n  //function for setting first name\n  const handleFirstname = (e) => {\n    e.preventDefault()\n    setFirstname(e.target.value)\n  }\n\n  //function for setting last name\n  const handleLastname = (e) => {\n    e.preventDefault()\n    setLastname(e.target.value)\n  }\n\n  //function for setting address\n  const handleAddress = (e) => {\n    e.preventDefault()\n    setAddress(e.target.value)\n  }\n\n  //function for setting pincode\n  const handlePincode = (e) => {\n    e.preventDefault()\n    setPincode(e.target.value)\n  }\n\n  //function for setting ward number\n  const handleWard = (e) => {\n    e.preventDefault()\n    setWard(e.target.value)\n  }\n\n  //function for setting phone number\n  const handlePhoneno = (e) => {\n    e.preventDefault()\n    setPhoneno(e.target.value)\n    setPhoneNoValidationErrorr('')\n  }\n\n  //function for setting email\n  const handleEmail = (e) => {\n    e.preventDefault()\n    setEmail(e.target.value)\n    setEmailValidationErrorr('')\n  }\n  //function for setting password\n  const handlePassword = (e) => {\n    e.preventDefault()\n    setPassword(e.target.value)\n  }\n\n  //function for form submit and API call for user registration functionality\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    const form = event.currentTarget\n    if (form.checkValidity() === false) {\n      event.preventDefault()\n      event.stopPropagation()\n    }\n    setValidated(true)\n    if (firstName && lastName && address && pincode && ward && phoneno && email && password) {\n      const signupdata = {\n        firstName,\n        lastName,\n        address,\n        pincode,\n        wardno: ward,\n        phoneno,\n        email,\n        password,\n      }\n      postRequest('houseowner/registerhouseowner', signupdata).then((res) => {\n        if (res.message) {\n          navigate('/login')\n        }\n        if (res.errorMessage) {\n          setEmailValidationErrorr(res.error_email)\n          setPhoneNoValidationErrorr(res.error_phoneno)\n        }\n      })\n    }\n  }\n  return (\n    <div className=\"bg-white min-vh-100 d-flex flex-row align-items-center\">\n      <CContainer>\n        <CRow className=\"justify-content-center\">\n          <CCol md={9} lg={7} xl={6}>\n            <CCard className=\"mx-4\">\n              <CCardBody className=\"p-4\">\n                <CForm\n                  className=\"row g-3 needs-validation\"\n                  noValidate\n                  validated={validated}\n                  onSubmit={handleSubmit}\n                >\n                  <h1>Register</h1>\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupText>\n                      <CIcon icon={cilUser} />\n                    </CInputGroupText>\n                    <CFormInput\n                      type=\"text\"\n                      aria-describedby=\"validationCustom03Feedback\"\n                      feedbackInvalid=\"Please enter Firstname.\"\n                      placeholder=\"First Name\"\n                      required\n                      onChange={(e) => handleFirstname(e)}\n                    />\n                  </CInputGroup>\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupText>\n                      <CIcon icon={cilUser} />\n                    </CInputGroupText>\n                    <CFormInput\n                      placeholder=\"Last Name\"\n                      type=\"text\"\n                      aria-describedby=\"validationCustom03Feedback\"\n                      feedbackInvalid=\"Please enter Lastname.\"\n                      required\n                      onChange={(e) => handleLastname(e)}\n                    />\n                  </CInputGroup>\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupText>@</CInputGroupText>\n                    <CFormInput\n                      placeholder=\"Email\"\n                      aria-describedby=\"validationCustom03Feedback\"\n                      feedbackInvalid=\"Please enter valid Email.\"\n                      type=\"email\"\n                      required\n                      onChange={(e) => handleEmail(e)}\n                    />\n                    {emailValidationErrorr && (\n                      <div className=\"text-danger\">{emailValidationErrorr}</div>\n                    )}\n                  </CInputGroup>\n\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupText>\n                      <CIcon icon={cilPhone} />\n                    </CInputGroupText>\n                    <CFormInput\n                      placeholder=\"Phoneno\"\n                      type=\"tel\"\n                      pattern=\"[0-9]{10}\"\n                      maxLength={10}\n                      minLength={10}\n                      aria-describedby=\"validationCustom03Feedback\"\n                      feedbackInvalid=\"Please enter Phone valid number.\"\n                      required\n                      onChange={(e) => handlePhoneno(e)}\n                    />\n                    {phoneNoValidationErrorr && (\n                      <p className=\"text-danger\">{phoneNoValidationErrorr}</p>\n                    )}\n                  </CInputGroup>\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupText>\n                      <CIcon icon={cilAddressBook} />\n                    </CInputGroupText>\n                    <CFormInput\n                      placeholder=\"Address\"\n                      type=\"text\"\n                      aria-describedby=\"validationCustom03Feedback\"\n                      feedbackInvalid=\"Please enter Address.\"\n                      required\n                      onChange={(e) => handleAddress(e)}\n                    />\n                  </CInputGroup>\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupText>\n                      <CIcon icon={cilLocationPin} />\n                    </CInputGroupText>\n                    <CFormInput\n                      placeholder=\"Pincode\"\n                      type=\"text\"\n                      aria-describedby=\"validationCustom03Feedback\"\n                      feedbackInvalid=\"Please enter valid Pincode.\"\n                      pattern=\"[0-9]{6}\"\n                      minLength={6}\n                      maxLength={6}\n                      required\n                      onChange={(e) => handlePincode(e)}\n                    />\n                  </CInputGroup>\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupText>\n                      <CIcon icon={cilBuilding} />\n                    </CInputGroupText>\n                    <CFormSelect\n                      placeholder=\"Select Ward\"\n                      aria-label=\"Default select example\"\n                      className=\"mb-.5\"\n                      feedbackInvalid=\"Please select Wardname.\"\n                      required\n                      onChange={(e) => handleWard(e)}\n                    >\n                      {wardData?.map((ward) => {\n                        return (\n                          <option key={ward.wardNo} value={ward.wardNo}>\n                            {ward.wardName}\n                          </option>\n                        )\n                      })}\n                    </CFormSelect>\n                  </CInputGroup>\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupText>\n                      <CIcon icon={cilLockLocked} />\n                    </CInputGroupText>\n                    <CFormInput\n                      type=\"password\"\n                      aria-describedby=\"validationCustom03Feedback\"\n                      feedbackInvalid=\"Please enter Password.\"\n                      placeholder=\"Password\"\n                      required\n                      onChange={(e) => handlePassword(e)}\n                    />\n                  </CInputGroup>\n                  <div className=\"d-grid\">\n                    <CButton color=\"success\" type=\"submit\">\n                      Create Account\n                    </CButton>\n                  </div>\n                </CForm>\n              </CCardBody>\n            </CCard>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </div>\n  )\n}\n\nexport default Register\n"],"names":["path","element","Home","name","Type","Register","Login","About","Bill","Payment","Homeservices","BookingStatus","BookingHistory","SlotBooking","UserProfile","AllocateCollector","WasteReport","CollectorList","UpdateCollectorList","SupervisorDashboard","HouseownerList","SupervisorList","PaymentHistory","WasteDataTable","SupervisorTable","WasteCollectionStatus","WasteCollectionUpdate","AppBreadcrumb","currentLocation","useLocation","pathname","breadcrumbs","location","split","reduce","prev","curr","index","array","currentPathname","routeName","routes","currentRoute","find","route","getRouteName","push","active","length","getBreadcrumbs","className","href","map","breadcrumb","key","React","event","navigate","useNavigate","authCtx","useContext","AuthContext","role","parseInt","sessionStorage","getItem","isLoggedIn","Roles","position","to","component","NavLink","AppHeaderDropdown","fluid","onClick","variant","placement","caret","color","type","icon","cilUser","removeItem","cilLockLocked","HOUSEOWNER","SUPERADMIN","ADMIN","SUPERVISOR","Container","Row","Col","src","aboutimg","alt","employeeId","useState","collectionDate","setCollectiondate","toast","setToast","toastMessage","class","controlId","placeholder","onChange","e","preventDefault","target","value","handleCollectionDate","allocationData","supervisor_id","collection_date","postRequest","then","data","toastData","message","title","Title_Status","description","errorMessage","catch","err","console","log","setData","collectorListData","useEffect","res","highlightOnHover","columns","selector","row","firstName","lastName","address","phoneNo","email","pagination","setFirstName","setLastName","setAddress","collector_id","setCollector_id","phoneno","setPhoneno","setEmail","visible","setVisible","setErrorMessage","validated","supervisorId","getCollectorData","response","cell","id","firstname","lastname","handleSupervisorNameChange","button","deleteSupervisorData","handleDeleteCollector","pointerOnHover","onClose","noValidate","feedbackInvalid","required","supervisorUpdateData","collectorAddData","updateSupervisor","getRequest","fullName","wardName","tableData","setTableData","wasteId","setWasteId","charge","setCharge","setValidated","errorAlert","setErrorAlert","getWasteData","wasteType","handleChargeUpdate","handleNewCharge","wasteDetailsUpdateData","waste_id","waste_rate","updateCharge","withCharts","wasteData","setWasteData","graphLabel","setGraphLabel","graphValue","setGraphValue","highestCopllectedWard","setHighestCopllectedWard","lowestCopllectedWard","setLowestCopllectedWard","totalSlotBooked","setTotalSlotBooked","wasteid","setWasteid","getData","highestCollectedWard","lowestCollectedWard","fetchGraphdata","wasteReportData","getGraphData","labels","values","Object","keys","forEach","cilCalendarCheck","height","style","cilMoney","cilCalendar","handleWaste","waste","waste_type","datasets","label","backgroundColor","supervisorData","setSupervisorData","getSupervsiorData","PLASTIC","FOOD","EWASTE","METAL","PAPER","plasticCollected","setPlasticCollected","foodCollected","setFoodCollected","ewasteCollected","setEwasteCollected","metalCollected","setMetalCollected","statusData","setStatusData","getStatusData","supervisorDashboardData","collection_status","colectionStatusData","houseownerName","WasteType","status","cilTrash","setStatus","Toast","md","onSubmit","currentTarget","checkValidity","stopPropagation","collectionUpdate","employee_id","resJson","handleStatus","Form","borderRadius","width","xs","wardNo","setWardNo","supervisorEmail","setSupervisorEmail","setWardName","formVisible","setFormVisible","getSupervisorData","handleFirstName","handleLastName","handlePhoneNo","wardNumber","supervisorFirstName","supervisorLastName","pattern","maxLength","minLength","wardno","supervisor_firstname","supervisor_lastname","supervisor_phoneno","handleWardName","handleWardNumber","handleEmail","addWardData","supervisorPhoneNo","handleUpdateWardData","wasteCollectionData","fetchCollectionData","supervisorName","homeLogo","options","strings","autoStart","loop","deleteSpeed","userId","userid","bookingDate","bookingdate","collectiondate","wastetype","supervisorname","Chart","ArcElement","totalAmount","setTotalAmount","slotCount","setSlotCount","pendingSlots","setPendingSlots","plasticWasteData","setPlasticWasteData","foodWasteData","setFoodWasteData","metalWasteData","setMetalWasteData","ewasteData","setEwasteData","widgetData","reactDonutChartdata","reactDonutChartStrokeColor","grandTotal","plastic","food","ewaste","metal","onMouseEnter","item","q","reactDonutChartOnMouseEnter","strokeColor","colors","innerRadius","selectedOffset","payDate","getInvoice","billGenerationData","bill","quantity","unit_price","total","STATUS_PAID","KEY","KEY_SECRET","current","Date","paydate","getFullYear","getMonth","getDate","mainbg","icons","Payments","key_secret","amount","currenty","handler","billPaymentData","grandtotal","Status","prefill","contact","notes","theme","window","Razorpay","open","booking_date","setWaste","setQuantity","slotbookingdata","cilLineWeight","min","handleQuantity","roleId","setFirstname","setLastname","wardname","setWardname","oldPassword","setOldPassword","newPassword","setNewPassword","confirmPassword","setConfirmPassword","setRole","avatar","setAvatar","getProfileData","Role","houseownerProfileData","corporationProfileData","handlePasswordChange","handleOldPassword","handleNewPassword","handleConfirmPassword","updatePassword","old_password","new_password","handleButton","size","htmlFor","token","login","setUser","user","logout","password","setPassword","userValidationErrorr","setUserValidationErrorr","logindata","setItem","handlePassword","tabIndex","pincode","setPincode","ward","setWard","emailValidationErrorr","setEmailValidationErrorr","phoneNoValidationErrorr","setPhoneNoValidationErrorr","wardData","setWardData","getWardData","lg","xl","signupdata","error_email","error_phoneno","handleFirstname","handleLastname","cilPhone","handlePhoneno","cilAddressBook","handleAddress","cilLocationPin","handlePincode","cilBuilding","handleWard"],"sourceRoot":""}