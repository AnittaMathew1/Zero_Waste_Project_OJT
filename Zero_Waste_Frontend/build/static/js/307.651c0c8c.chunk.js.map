{"version":3,"file":"static/js/307.651c0c8c.chunk.js","mappings":"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","sources":["enums/Roles.js","views/pages/login/Authcontext.js","views/pages/login/Login.js","../node_modules/@coreui/icons/js/free/cil-user.js"],"sourcesContent":["const Roles = {\n  HOUSEOWNER: 1,\n  SUPERADMIN: 2,\n  ADMIN: 3,\n  SUPERVISOR: 4,\n}\n\nexport default Roles\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\n//function for setting auth context\nexport const AuthContext = React.createContext({\n  token: null,\n  isLoggedIn: false,\n  login: (token) => {},\n  setUser: (user) => {},\n  logout: () => {},\n})\n\n//function for setting auth context during login and logout\nexport const AuthContextProvider = (props) => {\n  const [token, setToken] = useState(null)\n  const userIsLoggedIn = !!token\n  const logoutHandler = () => {\n    setToken(null)\n  }\n  const loginHandler = (token) => {\n    setToken(token)\n  }\n  const contextValue = {\n    isLoggedIn: userIsLoggedIn,\n    login: loginHandler,\n    logout: logoutHandler,\n  }\n  return <AuthContext.Provider value={contextValue}>{props.children}</AuthContext.Provider>\n}\n\nAuthContextProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n}\nexport default AuthContext\n","import React from 'react'\nimport { useState, useContext } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { Link } from 'react-router-dom'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardGroup,\n  CCol,\n  CContainer,\n  CForm,\n  CFormInput,\n  CInputGroup,\n  CInputGroupText,\n  CRow,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilLockLocked, cilUser } from '@coreui/icons'\nimport AuthContext from './Authcontext'\nimport './Login.css'\nimport Roles from 'src/enums/Roles'\nimport { postRequest } from '../../../components/Commonhttp/Commonhttp'\n\nconst Login = () => {\n  const navigate = useNavigate()\n  const authCtx = useContext(AuthContext)\n  const [validated, setValidated] = useState(false)\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [userValidationErrorr, setUserValidationErrorr] = useState('')\n\n  //function for setting email\n  const handleEmail = (e) => {\n    e.preventDefault()\n    setEmail(e.target.value)\n  }\n\n  //function for setting password\n  const handlePassword = (e) => {\n    e.preventDefault()\n    setPassword(e.target.value)\n    setUserValidationErrorr('')\n  }\n\n  //function for navigating to password changing page\n  const handleForgotPassword = () => {\n    navigate('/forgotpassword')\n  }\n\n  //function for form submit and API call for login functionality\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    const form = event.currentTarget\n    if (form.checkValidity() === false) {\n      setValidated(false)\n      event.stopPropagation()\n    }\n    setValidated(true)\n    if (email && password) {\n      const logindata = { email, password }\n      postRequest('login/', logindata)\n        .then((resJson) => {\n          sessionStorage.setItem('jwt', resJson.token)\n          sessionStorage.setItem('role', resJson.role)\n          sessionStorage.setItem('userid', resJson.userid)\n          if (resJson.role === Roles.HOUSEOWNER) {\n            authCtx.isLoggedIn = true\n            authCtx.login(resJson.token)\n            navigate('/houseowner-dashboard')\n            authCtx.isLoggedIn = resJson.token\n          } else if (resJson.role === Roles.SUPERADMIN || resJson.role === Roles.ADMIN) {\n            sessionStorage.setItem('employee_id', resJson.employee_id)\n            authCtx.isLoggedIn = true\n            authCtx.login(resJson.token)\n            navigate('/wastereport')\n            authCtx.isLoggedIn = resJson.token\n          } else if (resJson.role === Roles.SUPERVISOR) {\n            sessionStorage.setItem('employee_id', resJson.employee_id)\n            authCtx.isLoggedIn = true\n            authCtx.login(resJson.token)\n            navigate('/supervisor-dashboard')\n          } else {\n            setUserValidationErrorr(resJson.message)\n            setValidated(false)\n          }\n        })\n        .catch((err) => {\n          console.log(err)\n        })\n    }\n  }\n\n  return (\n    <div className=\"bg-white max-vh-70 d-flex flex-row align-items-center\">\n      <CContainer>\n        <CRow className=\"justify-content-center\">\n          <CCol md={10}>\n            <CCardGroup>\n              <CCard className=\"p-4\">\n                <CCardBody>\n                  <CForm\n                    className=\"row g-3 needs-validation\"\n                    noValidate\n                    validated={validated}\n                    onSubmit={handleSubmit}\n                  >\n                    <h1>Login</h1>\n                    <p className=\"text-medium-emphasis\">Sign In to your account</p>\n                    <CInputGroup className=\"mb-3\">\n                      <CInputGroupText>\n                        <CIcon icon={cilUser} />\n                      </CInputGroupText>\n                      <CFormInput\n                        type=\"email\"\n                        aria-describedby=\"validationCustom03Feedback\"\n                        feedbackInvalid=\"Please enter email.\"\n                        placeholder=\"Email\"\n                        required\n                        onChange={(e) => handleEmail(e)}\n                      />\n                    </CInputGroup>\n                    <CInputGroup className=\"mb-4\">\n                      <CInputGroupText>\n                        <CIcon icon={cilLockLocked} />\n                      </CInputGroupText>\n                      <CFormInput\n                        type=\"password\"\n                        aria-describedby=\"validationCustom03Feedback\"\n                        feedbackInvalid=\"Please enter password.\"\n                        placeholder=\"Password\"\n                        required\n                        onChange={(e) => handlePassword(e)}\n                      />\n                    </CInputGroup>\n                    <CRow>\n                      <CCol xs={4}>\n                        <CButton type=\"submit\" color=\"primary\" className=\"px-4\">\n                          Login\n                        </CButton>\n                      </CCol>\n                      <CCol xs={8}>\n                        <CButton\n                          color=\"link\"\n                          className=\"forgotpassword\"\n                          size=\"sm\"\n                          onClick={handleForgotPassword}\n                        >\n                          Forgot password?\n                        </CButton>\n                      </CCol>\n                      {userValidationErrorr && (\n                        <div className=\"errormessage\">{userValidationErrorr}</div>\n                      )}\n                    </CRow>\n                  </CForm>\n                </CCardBody>\n              </CCard>\n              <CCard className=\"text-white bg-primary py-5\">\n                <CCardBody className=\"text-center\">\n                  <div>\n                    <h2>Sign up</h2>\n                    <p>\n                      Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod\n                      tempor incididunt ut labore et dolore magna aliqua.\n                    </p>\n                    <Link to=\"/register\">\n                      <CButton color=\"primary\" className=\"mt-3\" active tabIndex={-1}>\n                        Register Now!\n                      </CButton>\n                    </Link>\n                  </div>\n                </CCardBody>\n              </CCard>\n            </CCardGroup>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </div>\n  )\n}\n\nexport default Login\n","export const cilUser = [\"512 512\",\"<path fill='var(--ci-primary-color, currentColor)' d='M411.6,343.656l-72.823-47.334,27.455-50.334A80.23,80.23,0,0,0,376,207.681V128a112,112,0,0,0-224,0v79.681a80.236,80.236,0,0,0,9.768,38.308l27.455,50.333L116.4,343.656A79.725,79.725,0,0,0,80,410.732V496H448V410.732A79.727,79.727,0,0,0,411.6,343.656ZM416,464H112V410.732a47.836,47.836,0,0,1,21.841-40.246l97.66-63.479-41.64-76.341A48.146,48.146,0,0,1,184,207.681V128a80,80,0,0,1,160,0v79.681a48.146,48.146,0,0,1-5.861,22.985L296.5,307.007l97.662,63.479h0A47.836,47.836,0,0,1,416,410.732Z' class='ci-primary'/>\"]"],"names":["HOUSEOWNER","SUPERADMIN","ADMIN","SUPERVISOR","AuthContext","React","token","isLoggedIn","login","setUser","user","logout","navigate","useNavigate","authCtx","useContext","useState","validated","setValidated","email","setEmail","password","setPassword","userValidationErrorr","setUserValidationErrorr","className","md","noValidate","onSubmit","event","preventDefault","currentTarget","checkValidity","stopPropagation","logindata","postRequest","then","resJson","sessionStorage","setItem","role","userid","Roles","employee_id","message","catch","err","console","log","icon","cilUser","type","feedbackInvalid","placeholder","required","onChange","e","target","value","handleEmail","cilLockLocked","handlePassword","xs","color","size","onClick","to","active","tabIndex"],"sourceRoot":""}